{"version":3,"sources":["logo.js","hero.js","options.js","files.js","toggle.js","suite.js","parse.js","app.js","index.js"],"names":["logo","react_default","a","createElement","className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","hero","_ref","active","onClick","dist","borderRadius","color","icons","passed","failed","warning","skipped","unknown","Search","label","type","placeholder","Total","_ref2","count","total","Count","_ref3","concat","aria-hidden","Toggle","_ref4","onIcon","onLabel","offIcon","disabled","offLabel","Toggles","_ref5","title","options_Toggle","ToggleOptions","_ref6","device","Options","_ref7","_ref7$counts","counts","toggles","_useState","useState","_useState2","Object","slicedToArray","setActive","options_ToggleOptions","options_Search","options_Total","map","options_Count","toggle","options_Toggles","assign","ToggleFiles","Files","files","files_ToggleFiles","href","evt","console","log","preventDefault","stopPropagation","defaultValue","react_codemirror2","value","options","mode","lineNumbers","onChange","cm","text","src_toggle","_ref$disabled","_ref$onChange","on","setOn","failure","error","Properties","properties","_ref$active","open","setOpen","keys","key","RawContent","messages","message","index","PrettyContent","dangerouslySetInnerHTML","__html","PrettyIcon","CodeIcon","Test","status","time","name","_ref4$active","_ref4$raw","raw","_useState3","_useState4","_useState5","_useState6","messageType","setMessageType","length","suite_CodeIcon","suite_PrettyIcon","suite_RawContent","suite_PrettyContent","SuiteCount","Suite","_ref6$active","_ref6$properties","_ref6$tests","tests","forEach","hasTests","hasProperties","containsSomething","_useState7","_useState8","suite_SuiteCount","suite_Properties","filter","suite_Test","includes","xml2js","require","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","i","charCodeAt","extractTests","output","suite","testcases","testcase","meta","$","id","test","push","trim","_","body","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","suites","extarctSuiteMeta","property","extractProperties","extract","parse","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","this","arguments","initialOptions","term","visible","expanded","App","setSuites","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","contents","parsed","undefined","Symbol","iterator","done","merge","recursive","t0","return","finish","parseAll","then","menuActive","setMenu","props","src_options","src_files","values","src_suite","ReactDOM","render","app","file","document","getElementById"],"mappings":"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","file":"static/js/main.b5386fc7.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\nimport { Slider } from 'react-burgers'\n\nexport default ({ active, onClick }) => <section className='hero is-black'>\n\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <Slider className='button' active={active} onClick={onClick} borderRadius={4} color='#fff' />\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          <Logo />\n          <h1 className='title'>Xunit Viewer</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import React, { useState } from 'react'\nimport { title } from 'change-case'\n\nconst icons = {\n  passed: 'check',\n  failed: 'times',\n  warning: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label }) => <div className='field options-search'>\n  <div className='control'>\n    <input className='input' type='text' placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst Count = ({ type, total }) => {\n  if (total === 0) return null\n  return <div className='options-count'>\n    <span className='icon'>\n      <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n    </span>\n    <span>{total}</span>\n  </div>\n}\n\nconst Toggle = ({ onIcon, offIcon, onLabel, offLabel, disabled }) => <button disabled={disabled} className='button toggle is-active'>\n  <div className='toggle-rail'>\n    <div className='toggle-handle' />\n  </div>\n  <span className='icon'>\n    <i className={`fas fa-${onIcon}`} />\n  </span>\n  <span>{onLabel}</span>\n</button>\n\nconst Toggles = ({ label, type, disabled }) => <div className='toggles'>\n  <h6 className='title is-6'>\n    {type ? <span className='icon'>\n      <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n    </span> : null}\n    <span>{title(label || type)}</span>\n  </h6>\n  <Toggle onIcon='eye' offIcon='eye-slash' onLabel='Visible' offLabel='Hidden' disabled={disabled} />\n  <Toggle onIcon='chevron-down' offIcon='chevron-up' onLabel='Expanded' offLabel='Contracted' disabled={disabled} />\n  <Toggle onIcon='code' offIcon='align-left' onLabel='Raw' offLabel='Pretty' disabled={disabled} />\n</div>\n\nconst ToggleOptions = ({ device, onClick }) => <button onClick={onClick} className={`card-header-icon is-hidden-${device}`}>\n  <span className='icon'>\n    <i className='fas fa-angle-down' aria-hidden='true' />\n  </span>\n</button>\n\nconst Options = ({ label, count, total, counts = [], toggles }) => {\n  const [active, setActive] = useState(false)\n  return <div className={`options card is-${active ? 'active' : 'inactive'}`}>\n    <header className='card-header'>\n      <ToggleOptions device='tablet' onClick={() => { setActive(!active) }} />\n      <div className='options-inputs'>\n        <Search label={label} />\n        <Total count={count} total={total} />\n        {counts.map(count => <Count {...count} />)}\n      </div>\n      <ToggleOptions device='mobile' onClick={() => { setActive(!active) }} />\n    </header>\n    {active ? <div className='card-content'>\n      <div className='toggles-container'>\n        {toggles.map(toggle => <Toggles {...toggle} disabled={!active} />)}\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Options\n","import React, { useState } from 'react'\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/xml/xml'\n\nconst ToggleFiles = ({ onClick }) => <button className='card-header-icon' onClick={onClick}>\n  <h6 className='subtitle is-5'>\n    <span className='icon'>\n      <i className='fas fa-code' />\n    </span>\n    <span>Files</span>\n  </h6>\n  <span className='icon'>\n    <i className='fas fa-angle-down' />\n  </span>\n</button>\n\nconst Files = ({ files = [] }) => {\n  const [active, setActive] = useState(false)\n  return <div className={`files card is-${active ? 'active' : 'inactive'}`}>\n    <header className='card-header'>\n      <ToggleFiles device='tablet' onClick={() => { setActive(!active) }} />\n    </header>\n    <div className='card-content'>\n      <div className='tabs is-boxed'>\n        <ul>\n          <li className='is-inactive'>\n            <a href={active ? '/' : null} onClick={(evt) => {\n              console.log('open file')\n              evt.preventDefault()\n            }}>\n              <span>file.xml</span>\n              <button disabled={!active} className='delete is-small' onClick={(evt) => {\n                console.log('remove file')\n                evt.stopPropagation()\n                evt.preventDefault()\n              }} />\n            </a>\n          </li>\n          <li className='is-active'>\n            <a href={active ? '/' : null} onClick={(evt) => {\n              console.log('open file')\n              evt.preventDefault()\n            }}>\n              <span>file.xml</span>\n              <button disabled={!active} className='delete is-small' onClick={(evt) => {\n                console.log('remove file')\n                evt.stopPropagation()\n                evt.preventDefault()\n              }} />\n            </a>\n          </li>\n          {/* <li>\n            <a href={active ? '/' : null} className='add-file' onClick={(evt) => {\n              console.log('add a new file')\n              evt.preventDefault()\n            }}>\n              <span className='icon'>\n                <i className='fas fa-plus' />\n              </span>\n            </a>\n          </li> */}\n        </ul>\n      </div>\n\n      <input className='input files-input' type='text' defaultValue='/this/is/the/full/filename.xml' placeholder='Filename' disabled={!active} />\n      {active ? <CodeMirror\n        value={`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuite tests=\"3\" failures=\"1\" time=\"0.0160106\">\n    <testcase name=\"Is An Error\" classname=\"Error\" time=\"0.00075\">\n        <error message=\"There was a error\" type=\"java.lang.RuntimeException\">java.lang.RuntimeException: There was an error</error>\n    </testcase>\n</testsuite>`}\n        options={{\n          mode: 'xml',\n          lineNumbers: true\n        }}\n        onChange={(cm, { text }, value) => {\n\n        }}\n      /> : null}\n    </div>\n\n  </div>\n}\n\nexport default Files\n","import React, { useState } from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {}\n}) => {\n  const [on, setOn] = useState(active)\n  return <button\n    onClick={() => {\n      setOn(!on)\n      onChange(!on)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${on ? 'active' : 'inactive'}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {on ? onIcon : offIcon}\n    <span>{on ? onLabel : offLabel}</span>\n  </button>\n}\n","import React, { useState } from 'react'\nimport { title } from 'change-case'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = false }) => {\n  const [open, setOpen] = useState(active)\n  return <div className={`properties card is-${open ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { setOpen(!open) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {!open ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties).map(key => {\n            return <tr key={key}>\n              <td>{key}</td>\n              <td>{properties[key]}</td>\n            </tr>\n          })}\n        </tbody>\n      </table>\n    </div> : null }\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ messages, status, time, name, active = false, raw = true }) => {\n  const [open, setOpen] = useState(active)\n  const [messageType, setMessageType] = useState(raw)\n  return <div className={`test card is-${open ? 'active' : 'inactive'} is-${status} is-${messages.length === 0 ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { setOpen(!open) }} disabled={messages.length === 0}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {messages.length > 0 ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    {!open && messages.length > 0 ? <div className='card-content'>\n      <Toggle\n        active={messageType}\n        onLabel='raw'\n        onIcon={<CodeIcon />}\n        offIcon={<PrettyIcon />}\n        offLabel='pretty'\n        onChange={(on) => setMessageType(on)} />\n      {messageType ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />}\n    </div> : null}\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ name, active = false, properties = {}, time, tests = {} }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0\n  const hasProperties = Object.keys(properties).length > 0\n  const containsSomething = hasTests || hasProperties\n  const [open, setOpen] = useState(active)\n  return <div className={`card suite is-${open ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) setOpen(!open) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {!open && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {hasProperties ? <Properties properties={properties} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} />)}\n          {Object.keys(tests)\n            .filter((key) => !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, testsuite) => {\n  suite.properties = suite.properties || {}\n  testsuite.properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    if (body._) test.messages.push(body._.trim())\n    if (body.$ && body.$.message) test.messages.push(body.$.message.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const time = meta.time || 0\n    const id = hashCode(name)\n\n    const test = suite.tests[id] || { id, name, messages: [] }\n    test.time = time\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      const status = keys[0]\n      if (status) extractTestMessages(test, testcase[status])\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  return output\n}\n\nexport default parse\n","import React, { useState } from 'react'\nimport merge from 'merge'\n\nimport Hero from './hero'\nimport Options from './options'\nimport Files from './files'\nimport Suite from './suite'\nimport parse from './parse'\n\nconst initialOptions = [{\n  key: 'suites',\n  label: 'Suites',\n  term: '',\n  active: false,\n  count: 0,\n  total: 0,\n  counts: [],\n  toggles: [{\n    key: 'all',\n    label: 'all',\n    visible: true,\n    expanded: true,\n    raw: true\n  }]\n}, {\n  key: 'tests',\n  label: 'Tests',\n  term: '',\n  active: false,\n  count: 0,\n  total: 0,\n  counts: [],\n  toggles: [{\n    key: 'all',\n    label: 'all',\n    visible: true,\n    expanded: true,\n    raw: true\n  }]\n}, {\n  key: 'properties',\n  label: 'Properties',\n  term: '',\n  active: false,\n  count: 0,\n  total: 0,\n  counts: [],\n  toggles: [{\n    key: 'all',\n    label: 'all',\n    visible: true,\n    expanded: true,\n    raw: true\n  }]\n}]\n\nconst parseAll = (files, suites) => new Promise(async resolve => {\n  for (const { contents } of files) {\n    const parsed = await parse(contents)\n    for (const id in parsed.suites) {\n      const suite = parsed.suites[id]\n      suites[id] = suites[id] || {}\n      suites[id] = merge.recursive(suites[id], suite)\n    }\n    resolve(suites)\n  }\n})\n\nconst App = ({ files }) => {\n  const [suites, setSuites] = useState({})\n  if (Object.keys(suites).length === 0) parseAll(files, {}).then(setSuites)\n\n  let [options] = useState(initialOptions)\n  const [menuActive, setMenu] = useState(false)\n\n  return <div>\n    <Hero active={menuActive} onClick={() => { setMenu(!menuActive) }} />\n    <header className={`is-${!menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        {options.map(props => <Options {...props} />)}\n        <Files files={files} />\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(suites).map(suite => {\n            return <Suite key={suite.id} {...suite} />\n          })}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './index.css'\nimport App from './app'\n\nconst files = [{\n  file: '/path/to/file/complete.xml',\n  contents: `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<testsuites>\n    <testsuite name=\"suite with properties\" time=\"100\">\n        <properties>\n            <property name=\"first_name\" value=\"first_value\" />\n            <property name=\"second_name\" value=\"second_name\" />\n        </properties>\n        <properties>\n            <property name=\"third_name\" value=\"third_name\" />\n        </properties>\n        <properties></properties>\n        <testcase name=\"random test name\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with no properties\">\n        <testcase name=\"random test name\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with each kind of test\">\n        <testcase name=\"passed with a message\" time=\"666\">\n            <passed>inner message</passed>\n        </testcase>\n        <testcase name=\"error with a message\" time=\"12.3456789\">\n            <error>inner message</error>\n        </testcase>\n        <testcase name=\"skipped with a message\">\n            <skipped>inner message</skipped>\n        </testcase>\n        <testcase name=\"failure with a message\">\n            <failure>inner message</failure>\n        </testcase>\n        <testcase name=\"test with no type\">inner message</testcase>\n        <testcase name=\"test with no type or message or inner message\"></testcase>\n        <testcase>no name</testcase>\n        <testcase></testcase>\n        <testcase name=\"multiple messages\">\n            <error>first message</error>\n            <error>second message</error>\n        </testcase>\n        <testcase name=\"test no inner message\">\n            <failure message=\"message\" type=\"type\"></failure>\n        </testcase>\n        <testcase name=\"test with no message type\">\n            <skipped message=\"message\"></skipped>\n        </testcase>\n        <testcase name=\"test with no message\">\n            <skipped type=\"type\"></skipped>\n        </testcase>\n        <testcase name=\"test with HTML\">\n            <error>&lt;i&gt;inner&lt;/i&gt;&lt;b&gt;message&lt;/b&gt;</error>\n        </testcase>\n        <testcase name=\"test with message and message type with HTML\">\n            <failure message=\"<b>message</b>\" type=\"<i>type</i>\"></failure>\n        </testcase>\n        <testcase name=\"test with message and message type and inner message\">\n            <error message=\"message\" type=\"type\">inner message</error>\n        </testcase>\n        <testcase name=\"test with a different classname\" classname=\"test with own class name\">\n            <passed></passed>\n        </testcase>\n        <testcase name=\"test with properties other than name or classname\" property=\"prop_value\" property_float=\"0.1234567890123456789\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite>\n        <testcase name=\"test in a suite with no name\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with properties other than name\" property=\"prop_value\" property_float=\"0.1234567890123456789\">\n        <testcase name=\"random test\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with no tests\">\n    </testsuite>\n    <testsuite name=\"suite with only properties\">\n        <properties>\n            <property name=\"first_name\" value=\"first_value\" />\n        </properties>\n    </testsuite>\n    <testsuite></testsuite>\n    <testsuite>\n        <testcase></testcase>\n    </testsuite>\n    <testsuite name=\"parent\">\n        <testcase name=\"parent test\"></testcase>\n        <testsuite name=\"child one\">\n            <testcase name=\"child one test\"></testcase>\n        </testsuite>\n        <testsuite name=\"child two\">\n            <testcase name=\"child two test\"></testcase>\n            <testsuite name=\"child of child two\">\n                <testcase name=\"child of child two test\"></testcase>\n            </testsuite>\n        </testsuite>\n        <testsuite>\n            <testcase name=\"child one test\"></testcase>\n        </testsuite>\n    </testsuite>\n</testsuites>`\n}]\n\nReactDOM.render(<App files={files} />, document.getElementById('root'))\n"],"sourceRoot":""}