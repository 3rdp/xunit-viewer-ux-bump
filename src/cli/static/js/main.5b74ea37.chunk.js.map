{"version":3,"sources":["app/logo.js","app/hero.js","app/parse.js","app/parse-all.js","app/toggle.js","app/properties-options.js","app/reducer.js","app/suite.js","app/suite-options.js","app/test-options.js","app/app.js","index.js","cli/parse.js"],"names":["className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","FilterIcon","active","onClick","title","brand","alt","src","require","parse","window","dispatch","files","suites","a","file","contents","parsed","merge","recursive","console","log","message","type","payload","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","evt","value","target","placeholder","Total","count","total","EyeIcon","EyeSlashIcon","ChevronUpIcon","ChevronDownIcon","propertiesExpanded","propertiesVisible","state","update","currentSuites","Object","values","forEach","suite","keys","tests","length","properties","name","id","fuzzy","test","toLowerCase","suitesExpanded","some","messages","visible","raw","entries","filter","key","concat","_active","_visible","suitesEmpty","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","testToggles","status","passed","failure","error","skipped","unknown","all","expanded","prop","icons","Properties","map","join","RawContent","index","PrettyContent","dangerouslySetInnerHTML","__html","PrettyIcon","CodeIcon","Test","time","classname","hasProperties","hasMessage","aria-hidden","SuiteCount","Suite","systemOut","hasTests","containsSomething","includes","HideIcon","ShowIcon","icon","fromTestCounts","testCounts","StatusTotal","ToggleRow","Options","App","useReducer","reducer","initialState","parseAll","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","sockets","useEffect","io","on","LZUTF8","decompress","inputEncoding","ReactDOM","render","document","getElementById","xml2js","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","i","charCodeAt","extractProperties","property","trim","push","meta","$","_","extractTests","output","testcases","testcase","clonedMeta","assign","body","is_","is$Message","is$Type","isString","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","extarctSuiteMeta","extractSystemOut","extract","module","exports"],"mappings":"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","file":"static/js/main.5b74ea37.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\n\nconst FilterIcon = () => <i className='fas fa-filter' />\n\nexport default ({ active, onClick, title, brand }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <button className='filter button has-text-white' onClick={onClick}>\n          <span><FilterIcon /> {!active ? 'FILTER' : 'CLOSE'}</span>\n        </button>\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          {\n            brand !== null\n              ? <img className='brand' alt={title} src={brand} />\n              : <Logo />\n          }\n          <h1 className='title'>{title}</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","require('../cli/parse')\nconst parse = window.parse\nexport default parse\n","import merge from 'merge'\nimport parse from './parse'\n\nexport default async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      console.log('Failed to parse', file, '\\n', err.message)\n    }\n  }\n  dispatch({\n    type: 'parse-suites',\n    payload: {\n      suites: suites.suites\n    }\n  })\n}\n","import React from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = true, propertiesVisible = true }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Properties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <Toggle\n            className='properties-options-toggle'\n            active={propertiesVisible}\n            onChange={() => {\n              dispatch({\n                type: 'toggle-properties-visbility',\n                payload: {\n                  active: !propertiesVisible\n                }\n              })\n            }}\n            onLabel='Visible'\n            offLabel='Hidden'\n            onIcon={<EyeIcon />}\n            offIcon={<EyeSlashIcon />} />\n          <Toggle\n            onChange={() => {\n              dispatch({\n                type: 'toggle-all-properties',\n                payload: {\n                  active: !propertiesExpanded\n                }\n              })\n            }}\n            className='properties-options-toggle'\n            active={propertiesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n","import fuzzy from 'fuzzy'\nimport merge from 'merge'\n\nexport default (state, { type, payload }) => {\n  const update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties)\n        .filter(([key]) => key !== '_visible' && key !== '_active')\n        .forEach(([key, values]) => {\n          values = values || []\n          if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n          else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n            if (update.currentSuites[suite.id]) {\n              update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n              update.currentSuites[suite.id].properties._active = true\n              update.currentSuites[suite.id].properties._visible = true\n              update.propertiesExpanded = false\n            }\n          }\n        })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-empty-suites') {\n    update.suitesEmpty = !state.suitesEmpty\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'toggle-all-properties') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._active = payload.active\n    })\n    update.propertiesExpanded = payload.active\n  }\n  if (type === 'toggle-properties') {\n    if (typeof payload.test !== 'undefined' && payload.test !== null) {\n      console.log(payload.test, update.currentSuites[payload.suite].tests[payload.test])\n      update.currentSuites[payload.suite].tests[payload.test].properties._active = payload.active\n    } else {\n      update.currentSuites[payload.suite].properties._active = payload.active\n      update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n        return suite.properties._active || false\n      })\n    }\n  }\n\n  if (type === 'toggle-properties-visbility') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._visible = payload.active\n    })\n    update.propertiesVisible = payload.active\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n            update.testToggles.failure.visible ||\n            update.testToggles.error.visible ||\n            update.testToggles.skipped.visible ||\n            update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n            update.testToggles.failure.expanded ||\n            update.testToggles.error.expanded ||\n            update.testToggles.skipped.expanded ||\n            update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n            update.testToggles.failure.raw ||\n            update.testToggles.error.raw ||\n            update.testToggles.skipped.raw ||\n            update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  state = merge.recursive(true, state, update)\n\n  Object.values(state.currentSuites).forEach(suite => {\n    if (!state.suitesEmpty) suite._visible = true\n    else suite._visible = (Object.keys(suite.tests).length > 0 && Object.values(suite.tests).filter(test => test.visible).length > 0) || (suite.properties._visible && Object.keys(suite.properties).filter(prop => prop !== '_visible').length > 0)\n  })\n\n  return state\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = true, dispatch, suite, test = null }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, test, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties)\n            .filter(key => key !== '_active' && key !== '_visible')\n            .map(key => {\n              return <tr key={key}>\n                <td>{key}</td>\n                <td>{properties[key].join(', ')}</td>\n              </tr>\n            })}\n        </tbody>\n      </table>\n    </div> : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, classname, name, properties = {}, active = true, raw = true, dispatch, suite }) => {\n  const hasProperties = Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const hasMessage = messages.length > 0\n  return <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${!hasMessage && !hasProperties ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={!hasMessage && !hasProperties}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{name}</span>\n        {classname ? <small>classname = {classname}</small> : null}\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {hasMessage || hasProperties ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    <div className='content'>\n      {active && (hasMessage || hasProperties) ? <div className='card-content'>\n        {hasProperties ? <Properties properties={properties} suite={suite} test={id} dispatch={dispatch} active={properties._active} /> : null}\n        {\n          hasMessage\n            ? <>\n              <Toggle\n                active={raw}\n                onLabel='raw'\n                onIcon={<CodeIcon />}\n                offIcon={<PrettyIcon />}\n                offLabel='pretty'\n                onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n              raw ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />\n            </>\n            : null\n        }\n      </div> : null}\n    </div>\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ visible, id, name, active = false, properties = {}, time, tests = {}, dispatch, systemOut = [] }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'} is-${visible ? 'visible' : 'hidden'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{name}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {active && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {systemOut.length > 0 ? systemOut.map((value, index) => <pre key={`${id}-sysout-${index}`}>{value}</pre>) : null}\n        {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst HideIcon = () => <span className='icon'>\n  <i className='far fa-eye-slash' />\n</span>\n\nconst ShowIcon = () => <span className='icon'>\n  <i className='far fa-eye' />\n</span>\n\nexport default ({ suitesExpanded = true, suitesEmpty = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-all-suites' })}\n            active={suitesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-empty-suites' })}\n            active={suitesEmpty}\n            onLabel='Empty hidden'\n            offLabel='Empty shown'\n            onIcon={<HideIcon />}\n            offIcon={<ShowIcon />} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Unknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React, { useEffect, useReducer } from 'react'\nimport Files from './files'\nimport Hero from './hero'\nimport initialState from './initial-state.json'\nimport parseAll from './parse-all'\nimport PropertiesOptions from './properties-options'\nimport reducer from './reducer'\nimport Suite from './suite'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\n\nconst App = ({ files, title, brand }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} title={title} brand={brand} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          suitesEmpty={state.suitesEmpty}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(state.currentSuites).map(suite => <Suite key={suite.id} {...suite} visible={suite._visible} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './app/index.css'\nimport App from './app/app.js'\n\nimport LZUTF8 from 'lzutf8'\n\nlet files = window.files || []\nconst title = window.title || 'Xunit Viewer'\nconst brand = window.brand || null\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: LZUTF8.compress(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuite tests=\"2\" failures=\"1\" time=\"0.0160106\">\n    <testcase classname=\"test_function\" file=\"test_function.py\" line=\"0\" name=\"test_function\" time=\"0.0009\">\n        <properties>\n            <property name=\"example_key\" value=\"1\"/>\n        </properties>\n    </testcase>\n</testsuite>\n\n\n`, { outputEncoding: 'Base64' })\n  }]\n}\n\nfiles = files.map(({ file, contents }) => ({\n  file,\n  contents: LZUTF8.decompress(contents, { inputEncoding: 'Base64' })\n}))\n\nReactDOM.render(<App files={files} title={title} brand={brand} />, document.getElementById('root'))\n","const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.systemOut = suite.systemOut || []\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n\n  Object.entries(meta).forEach(([key, value]) => {\n    if (!['errors', 'failures', 'name', 'skipped', 'tests', 'time'].includes(key)) {\n      suite.properties[key] = suite.properties[key] || []\n      suite.properties[key].push(value)\n    }\n  })\n\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, properties) => {\n  suite.properties = suite.properties || {}\n  properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    const is_ = typeof body._ === 'string'\n    const is$Message = typeof body.$ !== 'undefined' && ('message' in body.$)\n    const is$Type = typeof body.$ !== 'undefined' && ('type' in body.$)\n    const isString = typeof body === 'string'\n\n    if (is_) test.messages.push(body._.trim())\n    if (is$Message) test.messages.push(body.$.message.trim())\n    if (is$Type) test.messages.push(body.$.type.trim())\n    if (isString) test.messages.push(body.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const classname = meta.classname || ''\n    const time = meta.time || 0\n    const id = hashCode(name + classname)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    test.classname = classname\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n    if (typeof testcase.properties !== 'undefined') {\n      extractProperties(test, testcase.properties)\n      delete testcase.properties\n    }\n    const clonedMeta = Object.assign({}, meta)\n    delete clonedMeta.time\n    delete clonedMeta.name\n    delete clonedMeta.classname\n    delete clonedMeta.message\n    if (Object.keys(clonedMeta).length > 0) {\n      const property = []\n      for (const [name, value] of Object.entries(clonedMeta)) {\n        property.push({\n          $: {\n            name, value\n          }\n        })\n      }\n      extractProperties(test, [{ property }])\n    }\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      let status = keys[0]\n      keys.forEach((key) => {\n        if (key) extractTestMessages(test, testcase[key])\n      })\n      if (status === 'system-out') status = 'passed'\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSystemOut = (suite, testsuite) => {\n  suite.systemOut = suite.systemOut || []\n  let systemOut = testsuite['system-out']\n  if (!Array.isArray(systemOut)) systemOut = [systemOut]\n  suite.systemOut = suite.systemOut.concat(systemOut)\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite.properties)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    if (typeof testsuite['system-out'] !== 'undefined') extractSystemOut(suite, testsuite)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  for (const value of Object.values(output.suites)) {\n    value._visible = Object.keys(value.tests).length > 0 || Object.keys(value.properties).filter(prop => prop !== '_visible').length > 0\n    value.systemOut = value.systemOut.map(value => value.trim())\n  }\n  return output\n}\n\nif (typeof window !== 'undefined') window.parse = parse\nelse {\n  module.exports = parse\n}\n"],"sourceRoot":""}