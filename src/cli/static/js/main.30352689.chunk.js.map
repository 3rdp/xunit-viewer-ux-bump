{"version":3,"sources":["app/logo.js","app/hero.js","app/toggle.js","app/suite-options.js","app/test-options.js","app/properties-options.js","app/suite.js","app/parse.js","app/app.js","index.js","cli/parse.js"],"names":["className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","FilterIcon","active","onClick","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","dispatch","evt","type","payload","value","target","placeholder","Total","count","total","ChevronUpIcon","ChevronDownIcon","HideIcon","ShowIcon","suitesExpanded","suitesEmpty","icons","passed","failure","error","skipped","unknown","suite","id","icon","aria-hidden","fromTestCounts","testCounts","status","EyeIcon","EyeSlashIcon","PrettyIcon","CodeIcon","StatusTotal","ToggleRow","visible","expanded","raw","Options","testToggles","all","propertiesExpanded","propertiesVisible","Properties","properties","Object","keys","filter","key","map","join","RawContent","messages","message","index","PrettyContent","dangerouslySetInnerHTML","__html","Test","time","name","length","title","SuiteCount","Suite","tests","systemOut","forEach","hasTests","values","some","test","hasProperties","_visible","containsSomething","_active","includes","require","parse","window","parseAll","files","suites","a","file","contents","parsed","merge","recursive","console","log","reducer","state","update","currentSuites","fuzzy","toLowerCase","entries","concat","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","prop","initialState","App","useReducer","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","sockets","useEffect","io","on","LZUTF8","decompress","inputEncoding","ReactDOM","render","document","getElementById","xml2js","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","i","charCodeAt","extractTests","output","testcases","testcase","meta","$","push","trim","_","body","is_","is$Message","is$Type","isString","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","extarctSuiteMeta","property","extractProperties","extractSystemOut","extract","module","exports"],"mappings":"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","file":"static/js/main.30352689.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\n\nconst FilterIcon = () => <i className='fas fa-filter' />\n\nexport default ({ active, onClick }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <button className='filter button has-text-white' onClick={onClick}>\n          <span><FilterIcon /> {!active ? 'FILTER' : 'CLOSE'}</span>\n        </button>\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          <Logo />\n          <h1 className='title'>Xunit Viewer</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import React from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst HideIcon = () => <span className='icon'>\n  <i className='far fa-eye-slash' />\n</span>\n\nconst ShowIcon = () => <span className='icon'>\n  <i className='far fa-eye' />\n</span>\n\nexport default ({ suitesExpanded = true, suitesEmpty = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-all-suites' })}\n            active={suitesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-empty-suites' })}\n            active={suitesEmpty}\n            onLabel='Hide empty'\n            offLabel='Show empty'\n            onIcon={<HideIcon />}\n            offIcon={<ShowIcon />} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Unknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = true, propertiesVisible = true }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Properties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <Toggle\n            className='properties-options-toggle'\n            active={propertiesVisible}\n            onChange={() => {\n              dispatch({\n                type: 'toggle-properties-visbility',\n                payload: {\n                  active: !propertiesVisible\n                }\n              })\n            }}\n            onLabel='Visible'\n            offLabel='Hidden'\n            onIcon={<EyeIcon />}\n            offIcon={<EyeSlashIcon />} />\n          <Toggle\n            onChange={() => {\n              dispatch({\n                type: 'toggle-all-properties',\n                payload: {\n                  active: !propertiesExpanded\n                }\n              })\n            }}\n            className='properties-options-toggle'\n            active={propertiesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport { title } from 'change-case'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = true, dispatch, suite }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties)\n            .filter(key => key !== '_active' && key !== '_visible')\n            .map(key => {\n              return <tr key={key}>\n                <td>{key}</td>\n                <td>{properties[key].join(', ')}</td>\n              </tr>\n            })}\n        </tbody>\n      </table>\n    </div> : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, name, active = true, raw = true, dispatch, suite }) => {\n  return <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${messages.length === 0 ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={messages.length === 0}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {messages.length > 0 ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    {active && messages.length > 0 ? <div className='card-content'>\n      <Toggle\n        active={raw}\n        onLabel='raw'\n        onIcon={<CodeIcon />}\n        offIcon={<PrettyIcon />}\n        offLabel='pretty'\n        onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n      {raw ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />}\n    </div> : null}\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ visible, id, name, active = false, properties = {}, time, tests = {}, dispatch, systemOut = [] }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'} is-${visible ? 'visible' : 'hidden'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {active && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {systemOut.length > 0 ? systemOut.map((value, index) => <pre key={`${id}-sysout-${index}`}>{value}</pre>) : null}\n        {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","require('../cli/parse')\nconst parse = window.parse\nexport default parse\n","import React, { useReducer, useEffect } from 'react'\nimport merge from 'merge'\nimport fuzzy from 'fuzzy'\n\nimport Hero from './hero'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\nimport PropertiesOptions from './properties-options'\nimport Files from './files'\nimport Suite from './suite'\nimport parse from './parse'\n\nconst parseAll = async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      console.log('Failed to parse', file, '\\n', err.message)\n    }\n  }\n  dispatch({\n    type: 'parse-suites',\n    payload: {\n      suites: suites.suites\n    }\n  })\n}\n\nconst reducer = (state, { type, payload }) => {\n  const update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties)\n        .filter(([key]) => key !== '_visible' && key !== '_active')\n        .forEach(([key, values]) => {\n          values = values || []\n          if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n          else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n            if (update.currentSuites[suite.id]) {\n              update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n              update.currentSuites[suite.id].properties._active = true\n              update.currentSuites[suite.id].properties._visible = true\n              update.propertiesExpanded = false\n            }\n          }\n        })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-empty-suites') {\n    update.suitesEmpty = !state.suitesEmpty\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'toggle-all-properties') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._active = payload.active\n    })\n    update.propertiesExpanded = payload.active\n  }\n  if (type === 'toggle-properties') {\n    update.currentSuites[payload.suite].properties._active = payload.active\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n  }\n\n  if (type === 'toggle-properties-visbility') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._visible = payload.active\n    })\n    update.propertiesVisible = payload.active\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n          update.testToggles.failure.visible ||\n          update.testToggles.error.visible ||\n          update.testToggles.skipped.visible ||\n          update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n          update.testToggles.failure.expanded ||\n          update.testToggles.error.expanded ||\n          update.testToggles.skipped.expanded ||\n          update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n          update.testToggles.failure.raw ||\n          update.testToggles.error.raw ||\n          update.testToggles.skipped.raw ||\n          update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  state = merge.recursive(true, state, update)\n\n  Object.values(state.currentSuites).forEach(suite => {\n    if (!state.suitesEmpty) suite._visible = true\n    else suite._visible = (Object.keys(suite.tests).length > 0 && Object.values(suite.tests).filter(test => test.visible).length > 0) || (suite.properties._visible && Object.keys(suite.properties).filter(prop => prop !== '_visible').length > 0)\n  })\n\n  return state\n}\n\nconst initialState = {\n  suites: {},\n  currentSuites: {},\n  menuActive: false,\n  suiteOptionsActive: false,\n  testOptionsActive: false,\n  propertiesOptionsActive: false,\n  activeFiles: false,\n  suitesExpanded: true,\n  suitesEmpty: true,\n  propertiesExpanded: true,\n  propertiesVisible: true,\n  testToggles: {\n    all: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    passed: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    failure: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    error: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    skipped: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    unknown: {\n      visible: true,\n      expanded: true,\n      raw: true\n    }\n  }\n}\n\nconst App = ({ files }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          suitesEmpty={state.suitesEmpty}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(state.currentSuites).map(suite => <Suite key={suite.id} {...suite} visible={suite._visible} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './app/index.css'\nimport App from './app/app.js'\n\nimport LZUTF8 from 'lzutf8'\n\nlet files = window.files || []\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: LZUTF8.compress(`<testsuites>\n    <testsuite errors=\"0\" failures=\"1\" hostname=\"msk1wst056\" name=\"authorization.update_last_activity.Время последней активности изменяется при обновлении токена\" skipped=\"0\" tests=\"1\" time=\"3.245495\" timestamp=\"2020-02-13T11:57:14.939203\">\n    <testcase classname=\"authorization.update_last_activity.Время последней активности изменяется при обновлении токена\" name=\"Время последней активности изменяется при обновлении токена для мобильного устройства\" status=\"failed\" time=\"3.245495\">\n        <failure message=\"2020-02-13T08:57:11+00:00 &lt; 2020-02-13T08:57:11+00:00\" type=\"AssertionError\">\n            <![CDATA[\nFailing step: Тогда Время последней активности изменяется ... failed in 0.004s\n\nINFO:auth.api.requests:Response: 200 GET http://ocs-app.local:8018/idp/ui/login?login_challenge=d6d839a5812c443b86901005c768ffc9 data: <!DOCTYPE html><html><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width,minimum-scale=1,initial-scale=1\"/><meta name=\"next-head-count\" content=\"2\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/HkUfFtgP6klFe2fEQqmxy/pages/login.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/HkUfFtgP6klFe2fEQqmxy/pages/_app.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/runtime/webpack-91b117697e716c22a78b.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/framework.4a6d1274021dea07c0f6.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/commons.f45713c7aba3ce20097d.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/6773ad45d0354f4720872cd5ee776c22f13c9a91.0fb260b186eb72f24901.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/81ba0819ec88dd0bec17c1c438c133cab6a290fa.916a834513a83791b2f0.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/925ec3a858999a8097194b2c53fbfdb98bfa7494.17176631661852e1c5ef.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/runtime/main-02786df16d94ee682e6c.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/caafe67f7e62507843c5388d508343f7cf6447b9.5d398491c28c531fda49.js\" as=\"script\"/><link rel=\"preload\" href=\"/idp/ui/_next/static/chunks/8a5cd78cc6f6305e12437f1637a0ac79a4886b95.f0abb74104c271c8cee6.js\" as=\"script\"/></head><body><div id=\"__next\"></div><script id=\"__NEXT_DATA__\" type=\"application/json\"></script><script nomodule=\"\" src=\"/idp/ui/_next/static/runtime/polyfills-ca767adcfe74e5592607.js\"></script><script defer=\"\" data-next-page=\"/login\" src=\"/idp/ui/_next/static/HkUfFtgP6klFe2fEQqmxy/pages/login.js\"></script><script defer=\"\" data-next-page=\"/_app\" src=\"/idp/ui/_next/static/HkUfFtgP6klFe2fEQqmxy/pages/_app.js\"></script><script src=\"/idp/ui/_next/static/runtime/webpack-91b117697e716c22a78b.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/framework.4a6d1274021dea07c0f6.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/commons.f45713c7aba3ce20097d.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/6773ad45d0354f4720872cd5ee776c22f13c9a91.0fb260b186eb72f24901.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/81ba0819ec88dd0bec17c1c438c133cab6a290fa.916a834513a83791b2f0.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/925ec3a858999a8097194b2c53fbfdb98bfa7494.17176631661852e1c5ef.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/runtime/main-02786df16d94ee682e6c.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/caafe67f7e62507843c5388d508343f7cf6447b9.5d398491c28c531fda49.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/chunks/8a5cd78cc6f6305e12437f1637a0ac79a4886b95.f0abb74104c271c8cee6.js\" defer=\"\"></script><script src=\"/idp/ui/_next/static/HkUfFtgP6klFe2fEQqmxy/_buildManifest.js\" defer=\"\"></script></body></html>\n]]>\n        </failure>\n        <system-out>\n            <![CDATA[\n@scenario.begin\n\n  @fixture.test_account_with_all_roles\n  Сценарий: Время последней активности изменяется при обновлении токена для мобильного устройства\n    Допустим Пользователь входит в мобильное приложение Aurora-market ... passed in 0.160s\n    И Запоминает время последней активности ... passed in 0.017s\n    И Проходит 3 секунда ... passed in 3.002s\n    Когда Обновляется токен ... passed in 0.062s\n    Тогда Время последней активности изменяется ... failed in 0.004s\n\n@scenario.end\n--------------------------------------------------------------------------------\n]]>\n        </system-out>\n    </testcase>\n</testsuite>\n    </testsuites>\n\n`, { outputEncoding: 'Base64' })\n  }]\n}\n\nfiles = files.map(({ file, contents }) => ({\n  file,\n  contents: LZUTF8.decompress(contents, { inputEncoding: 'Base64' })\n}))\n\nReactDOM.render(<App files={files} />, document.getElementById('root'))\n","const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.systemOut = suite.systemOut || []\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n\n  Object.entries(meta).forEach(([key, value]) => {\n    if (!['errors', 'failures', 'name', 'skipped', 'tests', 'time'].includes(key)) {\n      suite.properties[key] = suite.properties[key] || []\n      suite.properties[key].push(value)\n    }\n  })\n\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, testsuite) => {\n  suite.properties = suite.properties || {}\n  testsuite.properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    const is_ = typeof body._ === 'string'\n    const is$Message = typeof body.$ !== 'undefined' && ('message' in body.$)\n    const is$Type = typeof body.$ !== 'undefined' && ('type' in body.$)\n    const isString = typeof body === 'string'\n\n    if (is_) test.messages.push(body._.trim())\n    if (is$Message) test.messages.push(body.$.message.trim())\n    if (is$Type) test.messages.push(body.$.type.trim())\n    if (isString) test.messages.push(body.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const time = meta.time || 0\n    const id = hashCode(name)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      let status = keys[0]\n      keys.forEach((key) => {\n        if (key) extractTestMessages(test, testcase[key])\n      })\n      if (status === 'system-out') status = 'passed'\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSystemOut = (suite, testsuite) => {\n  suite.systemOut = suite.systemOut || []\n  let systemOut = testsuite['system-out']\n  if (!Array.isArray(systemOut)) systemOut = [systemOut]\n  suite.systemOut = suite.systemOut.concat(systemOut)\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    if (typeof testsuite['system-out'] !== 'undefined') extractSystemOut(suite, testsuite)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  for (const value of Object.values(output.suites)) {\n    value._visible = Object.keys(value.tests).length > 0 || Object.keys(value.properties).filter(prop => prop !== '_visible').length > 0\n    value.systemOut = value.systemOut.map(value => value.trim())\n  }\n  return output\n}\n\nif (typeof window !== 'undefined') window.parse = parse\nelse {\n  module.exports = parse\n}\n"],"sourceRoot":""}