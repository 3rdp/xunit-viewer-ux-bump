{"version":3,"sources":["app/logo.js","app/hero.js","app/toggle.js","app/suite-options.js","app/test-options.js","app/properties-options.js","app/suite.js","app/parse.js","app/app.js","index.js","cli/parse.js"],"names":["className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","FilterIcon","active","onClick","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","dispatch","evt","type","payload","value","target","placeholder","Total","count","total","ChevronUpIcon","ChevronDownIcon","suitesExpanded","icons","passed","failure","error","skipped","unknown","suite","id","icon","aria-hidden","fromTestCounts","testCounts","status","EyeIcon","EyeSlashIcon","PrettyIcon","CodeIcon","StatusTotal","ToggleRow","visible","expanded","raw","Options","testToggles","all","propertiesExpanded","propertiesVisible","Properties","properties","Object","keys","filter","key","map","join","RawContent","messages","message","index","PrettyContent","dangerouslySetInnerHTML","__html","Test","time","name","length","title","SuiteCount","Suite","tests","systemOut","forEach","hasTests","values","some","test","hasProperties","_visible","containsSomething","_active","includes","require","parse","window","parseAll","files","suites","a","file","contents","parsed","merge","recursive","console","log","reducer","state","update","currentSuites","fuzzy","toLowerCase","entries","concat","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","initialState","App","useReducer","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","sockets","useEffect","io","on","ReactDOM","render","document","getElementById","xml2js","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","i","charCodeAt","extractTests","output","testcases","testcase","meta","$","push","trim","_","body","is_","is$Message","is$Type","isString","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","extarctSuiteMeta","property","extractProperties","extractSystemOut","extract","module","exports"],"mappings":"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","file":"static/js/main.21766b5b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\n\nconst FilterIcon = () => <i className='fas fa-filter' />\n\nexport default ({ active, onClick }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <button className='filter button has-text-white' onClick={onClick}>\n          <span><FilterIcon /> {!active ? 'FILTER' : 'CLOSE'}</span>\n        </button>\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          <Logo />\n          <h1 className='title'>Xunit Viewer</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import React from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ suitesExpanded = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <Toggle\n          onChange={() => dispatch({ type: 'toggle-all-suites' })}\n          active={suitesExpanded}\n          onLabel='Expanded'\n          offLabel='Contracted'\n          offIcon={<ChevronUpIcon />}\n          onIcon={<ChevronDownIcon />} />\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Unknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = true, propertiesVisible = true }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Properties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <Toggle\n            className='properties-options-toggle'\n            active={propertiesVisible}\n            onChange={() => {\n              dispatch({\n                type: 'toggle-properties-visbility',\n                payload: {\n                  active: !propertiesVisible\n                }\n              })\n            }}\n            onLabel='Visible'\n            offLabel='Hidden'\n            onIcon={<EyeIcon />}\n            offIcon={<EyeSlashIcon />} />\n          <Toggle\n            onChange={() => {\n              dispatch({\n                type: 'toggle-all-properties',\n                payload: {\n                  active: !propertiesExpanded\n                }\n              })\n            }}\n            className='properties-options-toggle'\n            active={propertiesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport { title } from 'change-case'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = true, dispatch, suite }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties)\n            .filter(key => key !== '_active' && key !== '_visible')\n            .map(key => {\n              return <tr key={key}>\n                <td>{key}</td>\n                <td>{properties[key].join(', ')}</td>\n              </tr>\n            })}\n        </tbody>\n      </table>\n    </div> : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, name, active = true, raw = true, dispatch, suite }) => {\n  return <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${messages.length === 0 ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={messages.length === 0}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {messages.length > 0 ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    {active && messages.length > 0 ? <div className='card-content'>\n      <Toggle\n        active={raw}\n        onLabel='raw'\n        onIcon={<CodeIcon />}\n        offIcon={<PrettyIcon />}\n        offLabel='pretty'\n        onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n      {raw ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />}\n    </div> : null}\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ id, name, active = false, properties = {}, time, tests = {}, dispatch, systemOut = [] }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {active && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {systemOut.length > 0 ? systemOut.map((value, index) => <pre key={`${id}-sysout-${index}`}>{value}</pre>) : null}\n        {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","require('../cli/parse')\nconst parse = window.parse\nexport default parse\n","import React, { useReducer, useEffect } from 'react'\nimport merge from 'merge'\nimport fuzzy from 'fuzzy'\n\nimport Hero from './hero'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\nimport PropertiesOptions from './properties-options'\nimport Files from './files'\nimport Suite from './suite'\nimport parse from './parse'\n\nconst parseAll = async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      console.log('Failed to parse', file, '\\n', err.message)\n    }\n  }\n  dispatch({\n    type: 'parse-suites',\n    payload: {\n      suites: suites.suites\n    }\n  })\n}\n\nconst reducer = (state, { type, payload }) => {\n  const update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties)\n        .filter(([key]) => key !== '_visible' && key !== '_active')\n        .forEach(([key, values]) => {\n          values = values || []\n          if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n          else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n            if (update.currentSuites[suite.id]) {\n              update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n              update.currentSuites[suite.id].properties._active = true\n              update.currentSuites[suite.id].properties._visible = true\n              update.propertiesExpanded = false\n            }\n          }\n        })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'toggle-all-properties') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._active = payload.active\n    })\n    update.propertiesExpanded = payload.active\n  }\n  if (type === 'toggle-properties') {\n    update.currentSuites[payload.suite].properties._active = payload.active\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n  }\n\n  if (type === 'toggle-properties-visbility') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._visible = payload.active\n    })\n    update.propertiesVisible = payload.active\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n          update.testToggles.failure.visible ||\n          update.testToggles.error.visible ||\n          update.testToggles.skipped.visible ||\n          update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n          update.testToggles.failure.expanded ||\n          update.testToggles.error.expanded ||\n          update.testToggles.skipped.expanded ||\n          update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n          update.testToggles.failure.raw ||\n          update.testToggles.error.raw ||\n          update.testToggles.skipped.raw ||\n          update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  return merge.recursive(true, state, update)\n}\n\nconst initialState = {\n  suites: {},\n  currentSuites: {},\n  menuActive: false,\n  suiteOptionsActive: false,\n  testOptionsActive: false,\n  propertiesOptionsActive: false,\n  activeFiles: false,\n  suitesExpanded: true,\n  propertiesExpanded: true,\n  propertiesVisible: true,\n  testToggles: {\n    all: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    passed: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    failure: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    error: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    skipped: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    unknown: {\n      visible: true,\n      expanded: true,\n      raw: true\n    }\n  }\n}\n\nconst App = ({ files }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(state.currentSuites).map(suite => <Suite key={suite.id} {...suite} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './app/index.css'\nimport App from './app/app.js'\n\nlet files = window.files || []\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: `<testsuites>\n    <testsuite errors=\"0\" failures=\"0\" hostname=\"msk1wst056\" name=\"sessions.sessions_api.Доступность эндпоинта получения списка сессий\" skipped=\"0\" tests=\"1\" time=\"1.047092\" timestamp=\"2020-02-13T12:02:50.675248\">\n    <testcase classname=\"sessions.sessions_api.Доступность эндпоинта получения списка сессий\" name=\"Проверка доступности эндпоинта получения сессий\" status=\"passed\" time=\"1.047092\"><system-out>\n    <![CDATA[\n@scenario.begin\n  Сценарий: Проверка доступности эндпоинта получения сессий\n    Когда Создана сессия для пользователя с аутентификацией во всех системах ... passed in 0.899s\n    И Пользователь входит в мобильное приложение Aurora-market ... passed in 0.129s\n    И Отправляется запрос для получения сессий для учетной записи Пользователь ... passed in 0.018s\n    Тогда Возвращается количество sessions равное 1 ... passed in 0.000s\n    И Возвращается количество tokens равное 1 ... passed in 0.000s\n\n@scenario.end\n--------------------------------------------------------------------------------\n    ]]>\n    </system-out></testcase>\n</testsuite>328500\n    <testsuite errors=\"0\" failures=\"0\" hostname=\"cerberus.fox\" name=\"pytest\" skipped=\"0\" tests=\"6\" time=\"0.078\" timestamp=\"2020-01-22T16:02:49.321656\">\n        <testcase classname=\"tests.test_config\" name=\"test_json_resolution\" time=\"0.001\"/>\n        <testcase classname=\"tests.test_config\" name=\"test_defaults\" time=\"0.001\"/>\n        <testcase classname=\"tests.test_integration\" name=\"test_config_relative_path\" time=\"0.012\">\n            <system-out>\ncwd: /tmp/tmpyn7k46sd emanate --source /tmp/tmpwz2h7glq/src '/tmp/tmpwz2h7glq/src/foo' -> '/tmp/tmpwz2h7glq/dest/foo' cwd: /tmp/tmpetkvkfdw emanate --source src '/tmp/tmpetkvkfdw/src/foo' -> '/tmp/tmpetkvkfdw/dest/foo' cwd: /tmp/tmpq7vws4le/src emanate '/tmp/tmpq7vws4le/src/foo' -> '/tmp/tmpq7vws4le/dest/foo'\n            </system-out>\n        </testcase>\n        <testcase classname=\"tests.test_integration\" name=\"test_no_config\" time=\"0.012\">\n            <system-out>\ncwd: /tmp/tmpuv0uzm7s emanate --source /tmp/tmp_uh8tzdz/src --dest /tmp/tmp_uh8tzdz/dest '/tmp/tmp_uh8tzdz/src/foo' -> '/tmp/tmp_uh8tzdz/dest/foo' '/tmp/tmp_uh8tzdz/src/bar/baz' -> '/tmp/tmp_uh8tzdz/dest/bar/baz' cwd: /tmp/tmpk99ai9r0 emanate --source src --dest /tmp/tmpk99ai9r0/dest '/tmp/tmpk99ai9r0/src/foo' -> '/tmp/tmpk99ai9r0/dest/foo' '/tmp/tmpk99ai9r0/src/bar/baz' -> '/tmp/tmpk99ai9r0/dest/bar/baz' cwd: /tmp/tmprxyuze4g/src emanate --dest /tmp/tmprxyuze4g/dest '/tmp/tmprxyuze4g/src/foo' -> '/tmp/tmprxyuze4g/dest/foo' '/tmp/tmprxyuze4g/src/bar/baz' -> '/tmp/tmprxyuze4g/dest/bar/baz'\n            </system-out>\n        </testcase>\n        <testcase classname=\"tests.test_integration\" name=\"test_empty_config\" time=\"0.011\">\n            <system-out>\ncwd: /tmp/tmp2gjl2wj_ emanate --source /tmp/tmp1t7j_ote/src --dest /tmp/tmp1t7j_ote/dest '/tmp/tmp1t7j_ote/src/foo' -> '/tmp/tmp1t7j_ote/dest/foo' cwd: /tmp/tmp9b40pw3b emanate --source src --dest /tmp/tmp9b40pw3b/dest '/tmp/tmp9b40pw3b/src/foo' -> '/tmp/tmp9b40pw3b/dest/foo' cwd: /tmp/tmpfmnr88qv/src emanate --dest /tmp/tmpfmnr88qv/dest '/tmp/tmpfmnr88qv/src/foo' -> '/tmp/tmpfmnr88qv/dest/foo'\n            </system-out>\n        </testcase>\n        <testcase classname=\"tests.test_integration\" name=\"test_clean\" time=\"0.013\">\n            <system-out>\ncwd: /tmp/tmp9q8tpxi2 emanate --source /tmp/tmpn4lvoqq7/src clean '/tmp/tmpn4lvoqq7/dest/foo' cwd: /tmp/tmp0dzkb_z5 emanate --source src clean '/tmp/tmp0dzkb_z5/dest/foo' cwd: /tmp/tmpsueno4qa/src emanate clean '/tmp/tmpsueno4qa/dest/foo'\n            </system-out>\n        </testcase>\n    </testsuite>\n        <testsuite name=\"SUITE ONE\" errors=\"7\" tests=\"10\" failures=\"2\" time=\"0.021\">\n            <properties>\n                <property name=\"flag-type\" value=\"bug\" />\n                <property name=\"flag-content\" value=\"APPLICATION DEFECT\" />\n                <property name=\"Has a name\" value=\"true\" />\n                <property name=\"URL\" value=\"/test/data.com\" />\n            </properties>\n            <properties>\n                <property name=\"flag-type\" value=\"bug\" />\n                <property name=\"flag-content\" value=\"APPLICATION DEFECT\" />\n                <property name=\"Has a name\" value=\"true\" />\n                <property name=\"URL\" value=\"/test/data.com\" />\n            </properties>\n            <testcase assertions=\"0\" classname=\"SUITE ONE\" name=\"the first test\" time=\"0.001\">\n                <error message=\"There was a error\" type=\"java.lang.RuntimeException\">java.lang.RuntimeException: There was an error</error>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE ONE\" name=\"the second test\" time=\"0.001\">\n                <error message=\"I ignore this\" type=\"when inner message\">&lt;i&gt;WITH&lt;/i&gt;&lt;b&gt;HTML&lt;/b&gt;</error>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE ONE\" name=\"the third test\" time=\"0.012\">\n                <passed message=\"I ignore\" type=\"this anyway\">For some reason a passing message</passed>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE ONE\" name=\"the fouth test\" time=\"0.001\">\n                <error message=\"There was a error 1\" type=\"java.lang.RuntimeException\">java.lang.RuntimeException: There was an error 1</error>\n                <error message=\"There was a error 2\" type=\"java.lang.RuntimeException\">java.lang.RuntimeException: There was an error 2</error>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE ONE\" name=\"the fifth test\" time=\"0.002\">\n                <error message=\"This one has no inner message\" type=\"java.lang.RuntimeException\"></error>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE ONE\" name=\"the sixt test\" time=\"0.001\">\n                <error message=\"This one has no inner message or type\"></error>\n            </testcase>\n        </testsuite>\n        <testsuite name=\"SUITE TWO\" errors=\"0\" tests=\"6\" failures=\"0\" time=\"0.021\">\n            <testcase assertions=\"0\" classname=\"SUITE TWO\" name=\"the first test\" time=\"0.001\">\n                <error type=\"This one has no inner message or message\"></error>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE TWO\" name=\"the second test\" time=\"0.001\">\n                <skipped></skipped>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE TWO\" name=\"the third test\" time=\"0.012\">\n                <failure></failure>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE TWO\" name=\"the fouth test\" time=\"0.001\">\n              <error message=\"<i>WITH HTML</i>\" type=\"<b>NO INNER</b>\"></error>\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE TWO\" name=\"the fifth test\" time=\"0.002\">\n            </testcase>\n            <testcase assertions=\"0\" classname=\"SUITE TWO\" name=\"the sixt test\" time=\"0.001\">\n            </testcase>\n        </testsuite>\n    </testsuites>\n\n`\n  }]\n}\n\nReactDOM.render(<App files={files} />, document.getElementById('root'))\n","const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.systemOut = suite.systemOut || []\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n\n  Object.entries(meta).forEach(([key, value]) => {\n    if (!['errors', 'failures', 'name', 'skipped', 'tests', 'time'].includes(key)) {\n      suite.properties[key] = suite.properties[key] || []\n      suite.properties[key].push(value)\n    }\n  })\n\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, testsuite) => {\n  suite.properties = suite.properties || {}\n  testsuite.properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    const is_ = typeof body._ === 'string'\n    const is$Message = typeof body.$ !== 'undefined' && ('message' in body.$)\n    const is$Type = typeof body.$ !== 'undefined' && ('type' in body.$)\n    const isString = typeof body === 'string'\n\n    if (is_) test.messages.push(body._.trim())\n    if (is$Message) test.messages.push(body.$.message.trim())\n    if (is$Type) test.messages.push(body.$.type.trim())\n    if (isString) test.messages.push(body.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const time = meta.time || 0\n    const id = hashCode(name)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      let status = keys[0]\n      if (status) extractTestMessages(test, testcase[status])\n      if (status === 'system-out') status = 'passed'\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSystemOut = (suite, testsuite) => {\n  suite.systemOut = suite.systemOut || []\n  let systemOut = testsuite['system-out']\n  if (!Array.isArray(systemOut)) systemOut = [systemOut]\n  suite.systemOut = suite.systemOut.concat(systemOut)\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    if (typeof testsuite['system-out'] !== 'undefined') extractSystemOut(suite, testsuite)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  for (const value of Object.values(output.suites)) {\n    value.systemOut = value.systemOut.map(value => value.trim())\n  }\n\n  return output\n}\n\nif (typeof window !== 'undefined') window.parse = parse\nelse {\n  module.exports = parse\n}\n"],"sourceRoot":""}