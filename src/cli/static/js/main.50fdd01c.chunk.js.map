{"version":3,"sources":["cli/parse.js","app/logo.js","app/hero.js","app/toggle.js","app/suite-options.js","app/test-options.js","app/properties-options.js","app/suite.js","app/parse.js","app/app.js","index.js"],"names":["xml2js","require","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","length","i","charCodeAt","extractProperties","suite","properties","forEach","property","trim","push","meta","$","name","value","_","extractTests","output","testcases","tests","testcase","time","id","test","messages","visible","message","clonedMeta","Object","assign","classname","keys","entries","filter","key","status","body","is_","is$Message","is$Type","isString","type","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","suites","systemOut","_visible","includes","extarctSuiteMeta","concat","extractSystemOut","extract","parse","a","values","prop","map","window","module","exports","className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","FilterIcon","active","onClick","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","dispatch","evt","payload","target","placeholder","Total","count","total","ChevronUpIcon","ChevronDownIcon","HideIcon","ShowIcon","suitesExpanded","suitesEmpty","icons","passed","failure","error","skipped","unknown","icon","aria-hidden","fromTestCounts","testCounts","EyeIcon","EyeSlashIcon","PrettyIcon","CodeIcon","StatusTotal","ToggleRow","expanded","raw","Options","testToggles","all","propertiesExpanded","propertiesVisible","Properties","join","RawContent","index","PrettyContent","dangerouslySetInnerHTML","__html","Test","hasProperties","_active","SuiteCount","Suite","hasTests","some","containsSomething","parseAll","files","file","contents","parsed","merge","recursive","console","log","reducer","state","update","currentSuites","fuzzy","toLowerCase","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","undefined","initialState","App","useReducer","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","sockets","useEffect","io","on","LZUTF8","decompress","inputEncoding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50fdd01c.chunk.js","sourcesContent":["const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.systemOut = suite.systemOut || []\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n\n  Object.entries(meta).forEach(([key, value]) => {\n    if (!['errors', 'failures', 'name', 'skipped', 'tests', 'time'].includes(key)) {\n      suite.properties[key] = suite.properties[key] || []\n      suite.properties[key].push(value)\n    }\n  })\n\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, properties) => {\n  suite.properties = suite.properties || {}\n  properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    const is_ = typeof body._ === 'string'\n    const is$Message = typeof body.$ !== 'undefined' && ('message' in body.$)\n    const is$Type = typeof body.$ !== 'undefined' && ('type' in body.$)\n    const isString = typeof body === 'string'\n\n    if (is_) test.messages.push(body._.trim())\n    if (is$Message) test.messages.push(body.$.message.trim())\n    if (is$Type) test.messages.push(body.$.type.trim())\n    if (isString) test.messages.push(body.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const time = meta.time || 0\n    const id = hashCode(name)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n    if (typeof testcase.properties !== 'undefined') {\n      extractProperties(test, testcase.properties)\n      delete testcase.properties\n    }\n    const clonedMeta = Object.assign({}, meta)\n    delete clonedMeta.time\n    delete clonedMeta.name\n    delete clonedMeta.classname\n    delete clonedMeta.message\n    if (Object.keys(clonedMeta).length > 0) {\n      const property = []\n      for (const [name, value] of Object.entries(clonedMeta)) {\n        property.push({\n          $: {\n            name, value\n          }\n        })\n      }\n      extractProperties(test, [{ property }])\n    }\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      let status = keys[0]\n      keys.forEach((key) => {\n        if (key) extractTestMessages(test, testcase[key])\n      })\n      if (status === 'system-out') status = 'passed'\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSystemOut = (suite, testsuite) => {\n  suite.systemOut = suite.systemOut || []\n  let systemOut = testsuite['system-out']\n  if (!Array.isArray(systemOut)) systemOut = [systemOut]\n  suite.systemOut = suite.systemOut.concat(systemOut)\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite.properties)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    if (typeof testsuite['system-out'] !== 'undefined') extractSystemOut(suite, testsuite)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  for (const value of Object.values(output.suites)) {\n    value._visible = Object.keys(value.tests).length > 0 || Object.keys(value.properties).filter(prop => prop !== '_visible').length > 0\n    value.systemOut = value.systemOut.map(value => value.trim())\n  }\n  return output\n}\n\nif (typeof window !== 'undefined') window.parse = parse\nelse {\n  module.exports = parse\n}\n","import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\n\nconst FilterIcon = () => <i className='fas fa-filter' />\n\nexport default ({ active, onClick }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <button className='filter button has-text-white' onClick={onClick}>\n          <span><FilterIcon /> {!active ? 'FILTER' : 'CLOSE'}</span>\n        </button>\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          <Logo />\n          <h1 className='title'>Xunit Viewer</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import React from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst HideIcon = () => <span className='icon'>\n  <i className='far fa-eye-slash' />\n</span>\n\nconst ShowIcon = () => <span className='icon'>\n  <i className='far fa-eye' />\n</span>\n\nexport default ({ suitesExpanded = true, suitesEmpty = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-all-suites' })}\n            active={suitesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n          <Toggle\n            onChange={() => dispatch({ type: 'toggle-empty-suites' })}\n            active={suitesEmpty}\n            onLabel='Empty hidden'\n            offLabel='Empty shown'\n            onIcon={<HideIcon />}\n            offIcon={<ShowIcon />} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Unknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = true, propertiesVisible = true }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Properties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <Toggle\n            className='properties-options-toggle'\n            active={propertiesVisible}\n            onChange={() => {\n              dispatch({\n                type: 'toggle-properties-visbility',\n                payload: {\n                  active: !propertiesVisible\n                }\n              })\n            }}\n            onLabel='Visible'\n            offLabel='Hidden'\n            onIcon={<EyeIcon />}\n            offIcon={<EyeSlashIcon />} />\n          <Toggle\n            onChange={() => {\n              dispatch({\n                type: 'toggle-all-properties',\n                payload: {\n                  active: !propertiesExpanded\n                }\n              })\n            }}\n            className='properties-options-toggle'\n            active={propertiesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = true, dispatch, suite, test = null }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, test, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties)\n            .filter(key => key !== '_active' && key !== '_visible')\n            .map(key => {\n              return <tr key={key}>\n                <td>{key}</td>\n                <td>{properties[key].join(', ')}</td>\n              </tr>\n            })}\n        </tbody>\n      </table>\n    </div> : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, name, properties = {}, active = true, raw = true, dispatch, suite }) => {\n  const hasProperties = Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  return <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${messages.length === 0 ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={messages.length === 0}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{name}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {messages.length > 0 ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    <div className='content'>\n      {active && messages.length > 0 ? <div className='card-content'>\n        {hasProperties ? <Properties properties={properties} suite={suite} test={id} dispatch={dispatch} active={properties._active} /> : null}\n        <Toggle\n          active={raw}\n          onLabel='raw'\n          onIcon={<CodeIcon />}\n          offIcon={<PrettyIcon />}\n          offLabel='pretty'\n          onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n        {raw ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />}\n      </div> : null}\n    </div>\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ visible, id, name, active = false, properties = {}, time, tests = {}, dispatch, systemOut = [] }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'} is-${visible ? 'visible' : 'hidden'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{name}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {active && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {systemOut.length > 0 ? systemOut.map((value, index) => <pre key={`${id}-sysout-${index}`}>{value}</pre>) : null}\n        {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","require('../cli/parse')\nconst parse = window.parse\nexport default parse\n","import React, { useReducer, useEffect } from 'react'\nimport merge from 'merge'\nimport fuzzy from 'fuzzy'\n\nimport Hero from './hero'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\nimport PropertiesOptions from './properties-options'\nimport Files from './files'\nimport Suite from './suite'\nimport parse from './parse'\n\nconst parseAll = async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      console.log('Failed to parse', file, '\\n', err.message)\n    }\n  }\n  dispatch({\n    type: 'parse-suites',\n    payload: {\n      suites: suites.suites\n    }\n  })\n}\n\nconst reducer = (state, { type, payload }) => {\n  const update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties)\n        .filter(([key]) => key !== '_visible' && key !== '_active')\n        .forEach(([key, values]) => {\n          values = values || []\n          if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n          else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n            if (update.currentSuites[suite.id]) {\n              update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n              update.currentSuites[suite.id].properties._active = true\n              update.currentSuites[suite.id].properties._visible = true\n              update.propertiesExpanded = false\n            }\n          }\n        })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-empty-suites') {\n    update.suitesEmpty = !state.suitesEmpty\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'toggle-all-properties') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._active = payload.active\n    })\n    update.propertiesExpanded = payload.active\n  }\n  if (type === 'toggle-properties') {\n    if (payload.test !== undefined) {\n      update.currentSuites[payload.suite].tests[payload.test].properties._active = payload.active\n    } else {\n      update.currentSuites[payload.suite].properties._active = payload.active\n      update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n        return suite.properties._active || false\n      })\n    }\n  }\n\n  if (type === 'toggle-properties-visbility') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._visible = payload.active\n    })\n    update.propertiesVisible = payload.active\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n          update.testToggles.failure.visible ||\n          update.testToggles.error.visible ||\n          update.testToggles.skipped.visible ||\n          update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n          update.testToggles.failure.expanded ||\n          update.testToggles.error.expanded ||\n          update.testToggles.skipped.expanded ||\n          update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n          update.testToggles.failure.raw ||\n          update.testToggles.error.raw ||\n          update.testToggles.skipped.raw ||\n          update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  state = merge.recursive(true, state, update)\n\n  Object.values(state.currentSuites).forEach(suite => {\n    if (!state.suitesEmpty) suite._visible = true\n    else suite._visible = (Object.keys(suite.tests).length > 0 && Object.values(suite.tests).filter(test => test.visible).length > 0) || (suite.properties._visible && Object.keys(suite.properties).filter(prop => prop !== '_visible').length > 0)\n  })\n\n  return state\n}\n\nconst initialState = {\n  suites: {},\n  currentSuites: {},\n  menuActive: false,\n  suiteOptionsActive: false,\n  testOptionsActive: false,\n  propertiesOptionsActive: false,\n  activeFiles: false,\n  suitesExpanded: true,\n  suitesEmpty: true,\n  propertiesExpanded: true,\n  propertiesVisible: true,\n  testToggles: {\n    all: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    passed: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    failure: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    error: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    skipped: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    unknown: {\n      visible: true,\n      expanded: true,\n      raw: true\n    }\n  }\n}\n\nconst App = ({ files }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          suitesEmpty={state.suitesEmpty}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(state.currentSuites).map(suite => <Suite key={suite.id} {...suite} visible={suite._visible} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './app/index.css'\nimport App from './app/app.js'\n\nimport LZUTF8 from 'lzutf8'\n\nlet files = window.files || []\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: LZUTF8.compress(`<testsuite name='DELETED.BasicWebViewControllerTests' tests='8' failures='1'>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testCompletionIsCalledWhenResettingWebContentEarly' time='0.010'/>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testFullResetWebViewURL' time='0.011'/>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testIsBasedOnHostMatchingURLReturnsFalseWhenHostDoesNotMatch' time='0.008'/>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testIsBasedOnHostMatchingURLReturnsFalseWithNilDefaultURL' time='0.008'/>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testIsBasedOnHostMatchingURLReturnsTrueWhenHostMatches' time='0.008'/>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testLoadingFragmentURLSession' retries='1'>\n\n      <failure message='Asynchronous wait failed: Exceeded timeout of 5 seconds, with unfulfilled expectations: &quot;testLoadingFragmentURLSession()&quot;.'>\n\n        \n\n        [DELETED]/BasicWebViewControllerTests.swift:103 \n\n      </failure>\n\n    </testcase>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testResetWebContentWithDefaultURL' time='1.481'/>\n\n    <testcase classname='DELETED.BasicWebViewControllerTests' name='testResetWebContentWithNilDefaultURL' time='1.458'/>\n\n  </testsuite>\n\n`, { outputEncoding: 'Base64' })\n  }]\n}\n\nfiles = files.map(({ file, contents }) => ({\n  file,\n  contents: LZUTF8.decompress(contents, { inputEncoding: 'Base64' })\n}))\n\nReactDOM.render(<App files={files} />, document.getElementById('root'))\n"],"sourceRoot":""}