{"version":3,"sources":["logo.js","hero.js","toggle.js","suite-options.js","test-options.js","properties-options.js","suite.js","parse.js","app.js","index.js"],"names":["className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","active","onClick","borderRadius","color","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","dispatch","evt","type","payload","value","target","placeholder","Total","count","total","ChevronUpIcon","ChevronDownIcon","suitesExpanded","icons","passed","failure","error","skipped","unknown","suite","id","icon","aria-hidden","fromTestCounts","testCounts","status","EyeIcon","EyeSlashIcon","PrettyIcon","CodeIcon","StatusTotal","ToggleRow","visible","expanded","raw","Options","testToggles","all","propertiesExpanded","propertiesVisible","Properties","properties","Object","keys","filter","key","map","RawContent","messages","message","index","PrettyContent","dangerouslySetInnerHTML","__html","Test","time","name","length","title","SuiteCount","Suite","tests","forEach","hasTests","values","some","test","hasProperties","_visible","containsSomething","_active","includes","xml2js","require","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","i","charCodeAt","extractTests","output","testcases","testcase","meta","$","push","trim","_","body","extractTestMessages","testsuite","extractSuite","testsuites","Array","isArray","suites","extarctSuiteMeta","property","extractProperties","extract","parse","a","parseAll","files","file","contents","parsed","merge","recursive","console","log","reducer","state","update","currentSuites","fuzzy","toLowerCase","entries","concat","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","initialState","App","useReducer","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","window","sockets","useEffect","io","on","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e21eeff.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\nimport { Slider } from 'react-burgers'\n\nexport default ({ active, onClick }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <Slider className='button' active={active} onClick={onClick} borderRadius={4} color='#fff' />\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          <Logo />\n          <h1 className='title'>Xunit Viewer</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import React from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ suitesExpanded = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <Toggle\n          onChange={() => dispatch({ type: 'toggle-all-suites' })}\n          active={suitesExpanded}\n          onLabel='Expanded'\n          offLabel='Contracted'\n          offIcon={<ChevronUpIcon />}\n          onIcon={<ChevronDownIcon />} />\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Exanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Uknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = true, propertiesVisible = true }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Propeties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <Toggle\n            className='properties-options-toggle'\n            active={propertiesVisible}\n            onChange={() => {\n              dispatch({\n                type: 'toggle-properties-visbility',\n                payload: {\n                  active: !propertiesVisible\n                }\n              })\n            }}\n            onLabel='Visible'\n            offLabel='Hidden'\n            onIcon={<EyeIcon />}\n            offIcon={<EyeSlashIcon />} />\n          <Toggle\n            onChange={() => {\n              dispatch({\n                type: 'toggle-all-properties',\n                payload: {\n                  active: !propertiesExpanded\n                }\n              })\n            }}\n            className='properties-options-toggle'\n            active={propertiesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport { title } from 'change-case'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = true, dispatch, suite }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties)\n            .filter(key => key !== '_active' && key !== '_visible')\n            .map(key => {\n              return <tr key={key}>\n                <td>{key}</td>\n                <td>{properties[key]}</td>\n              </tr>\n            })}\n        </tbody>\n      </table>\n    </div> : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, name, active = true, raw = true, dispatch, suite }) => {\n  return <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${messages.length === 0 ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={messages.length === 0}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {messages.length > 0 ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    {active && messages.length > 0 ? <div className='card-content'>\n      <Toggle\n        active={raw}\n        onLabel='raw'\n        onIcon={<CodeIcon />}\n        offIcon={<PrettyIcon />}\n        offLabel='pretty'\n        onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n      {raw ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />}\n    </div> : null}\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ id, name, active = false, properties = {}, time, tests = {}, dispatch }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {active && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, testsuite) => {\n  suite.properties = suite.properties || {}\n  testsuite.properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    if (body._) test.messages.push(body._.trim())\n    if (body.$ && body.$.message) test.messages.push(body.$.message.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const time = meta.time || 0\n    const id = hashCode(name)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      const status = keys[0]\n      if (status) extractTestMessages(test, testcase[status])\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  return output\n}\n\nexport default parse\n","import React, { useReducer, useEffect } from 'react'\nimport merge from 'merge'\nimport fuzzy from 'fuzzy'\n\nimport Hero from './hero'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\nimport PropertiesOptions from './properties-options'\nimport Files from './files'\nimport Suite from './suite'\nimport parse from './parse'\n\nconst parseAll = async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      console.log('Failed to parse', file, '\\n', err.message)\n    }\n  }\n  dispatch({\n    type: 'parse-suites',\n    payload: {\n      suites: suites.suites\n    }\n  })\n}\n\nconst reducer = (state, { type, payload }) => {\n  console.log(type, payload)\n\n  const update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties).forEach(([key, values]) => {\n        values = values || []\n        if (values === true) values = []\n        if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n        else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n            update.currentSuites[suite.id].properties._active = true\n            update.currentSuites[suite.id].properties._visible = true\n            update.propertiesExpanded = false\n          }\n        }\n      })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'toggle-all-properties') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._active = payload.active\n    })\n    update.propertiesExpanded = payload.active\n  }\n  if (type === 'toggle-properties') {\n    update.currentSuites[payload.suite].properties._active = payload.active\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n  }\n\n  if (type === 'toggle-properties-visbility') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._visible = payload.active\n    })\n    update.propertiesVisible = payload.active\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n          update.testToggles.failure.visible ||\n          update.testToggles.error.visible ||\n          update.testToggles.skipped.visible ||\n          update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n          update.testToggles.failure.expanded ||\n          update.testToggles.error.expanded ||\n          update.testToggles.skipped.expanded ||\n          update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n          update.testToggles.failure.raw ||\n          update.testToggles.error.raw ||\n          update.testToggles.skipped.raw ||\n          update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  return merge.recursive(true, state, update)\n}\n\nconst initialState = {\n  suites: {},\n  currentSuites: {},\n  menuActive: false,\n  suiteOptionsActive: false,\n  testOptionsActive: false,\n  propertiesOptionsActive: false,\n  activeFiles: false,\n  suitesExpanded: true,\n  propertiesExpanded: true,\n  propertiesVisible: true,\n  testToggles: {\n    all: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    passed: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    failure: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    error: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    skipped: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    unknown: {\n      visible: true,\n      expanded: true,\n      raw: true\n    }\n  }\n}\n\nconst App = ({ files }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(state.currentSuites).map(suite => <Suite key={suite.id} {...suite} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './index.css'\nimport App from './app'\n\nlet files = window.files || []\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<testsuites>\n    <testsuite name=\"suite with properties\" time=\"100\">\n        <properties>\n            <property name=\"first_name\" value=\"first_value\" />\n            <property name=\"second_name\" value=\"second_name\" />\n        </properties>\n        <properties>\n            <property name=\"third_name\" value=\"third_name\" />\n        </properties>\n        <properties></properties>\n        <testcase name=\"random test name\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with no properties\">\n        <testcase name=\"random test name\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with each kind of test\">\n        <testcase name=\"passed with a message\" time=\"666\">\n            <passed>inner message</passed>\n        </testcase>\n        <testcase name=\"error with a message\" time=\"12.3456789\">\n            <error>inner message</error>\n        </testcase>\n        <testcase name=\"skipped with a message\">\n            <skipped>inner message</skipped>\n        </testcase>\n        <testcase name=\"failure with a message\">\n            <failure>inner message</failure>\n        </testcase>\n        <testcase name=\"test with no type\">inner message</testcase>\n        <testcase name=\"test with no type or message or inner message\"></testcase>\n        <testcase>no name</testcase>\n        <testcase></testcase>\n        <testcase name=\"multiple messages\">\n            <error>first message</error>\n            <error>second message</error>\n        </testcase>\n        <testcase name=\"test no inner message\">\n            <failure message=\"message\" type=\"type\"></failure>\n        </testcase>\n        <testcase name=\"test with no message type\">\n            <skipped message=\"message\"></skipped>\n        </testcase>\n        <testcase name=\"test with no message\">\n            <skipped type=\"type\"></skipped>\n        </testcase>\n        <testcase name=\"test with HTML\">\n            <error>&lt;i&gt;inner&lt;/i&gt;&lt;b&gt;message&lt;/b&gt;</error>\n        </testcase>\n        <testcase name=\"test with message and message type with HTML\">\n            <failure message=\"<b>message</b>\" type=\"<i>type</i>\"></failure>\n        </testcase>\n        <testcase name=\"test with message and message type and inner message\">\n            <error message=\"message\" type=\"type\">inner message</error>\n        </testcase>\n        <testcase name=\"test with a different classname\" classname=\"test with own class name\">\n            <passed></passed>\n        </testcase>\n        <testcase name=\"test with properties other than name or classname\" property=\"prop_value\" property_float=\"0.1234567890123456789\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite>\n        <testcase name=\"test in a suite with no name\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with properties other than name\" property=\"prop_value\" property_float=\"0.1234567890123456789\">\n        <testcase name=\"random test\">\n            <passed></passed>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"suite with no tests\">\n    </testsuite>\n    <testsuite name=\"suite with only properties\">\n        <properties>\n            <property name=\"first_name\" value=\"first_value\" />\n        </properties>\n    </testsuite>\n    <testsuite></testsuite>\n    <testsuite>\n        <testcase></testcase>\n    </testsuite>\n    <testsuite name=\"parent\">\n        <testcase name=\"parent test\"></testcase>\n        <testsuite name=\"child one\">\n            <testcase name=\"child one test\"></testcase>\n        </testsuite>\n        <testsuite name=\"child two\">\n            <testcase name=\"child two test\"></testcase>\n            <testsuite name=\"child of child two\">\n                <testcase name=\"child of child two test\"></testcase>\n            </testsuite>\n        </testsuite>\n        <testsuite>\n            <testcase name=\"child one test\"></testcase>\n        </testsuite>\n    </testsuite>\n</testsuites>`\n  }]\n}\n\nReactDOM.render(<App files={files} />, document.getElementById('root'))\n"],"sourceRoot":""}