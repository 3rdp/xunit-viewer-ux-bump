{"version":3,"sources":["cli/parse.js","app/logo.js","app/hero.js","app/toggle.js","app/suite-options.js","app/test-options.js","app/properties-options.js","app/suite.js","app/parse.js","app/app.js","index.js"],"names":["xml2js","require","parseString","xml","Promise","resolve","reject","err","result","Error","hashCode","str","hash","length","i","charCodeAt","extractTests","output","suite","testcases","tests","forEach","testcase","meta","$","name","time","id","test","messages","visible","push","trim","_","message","status","Object","keys","filter","key","body","is_","is$Message","is$Type","isString","type","extractTestMessages","console","log","testsuite","extractSuite","testsuites","Array","isArray","suites","properties","_visible","extarctSuiteMeta","property","value","extractProperties","extract","parse","a","window","module","exports","className","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","active","onClick","borderRadius","color","onIcon","offIcon","onLabel","offLabel","disabled","onChange","Search","label","dispatch","evt","payload","target","placeholder","Total","count","total","ChevronUpIcon","ChevronDownIcon","suitesExpanded","icons","passed","failure","error","skipped","unknown","icon","aria-hidden","fromTestCounts","testCounts","EyeIcon","EyeSlashIcon","PrettyIcon","CodeIcon","StatusTotal","ToggleRow","expanded","raw","Options","testToggles","all","propertiesExpanded","propertiesVisible","Properties","map","RawContent","index","PrettyContent","dangerouslySetInnerHTML","__html","Test","title","SuiteCount","Suite","hasTests","values","some","hasProperties","containsSomething","_active","includes","parseAll","files","file","contents","parsed","merge","recursive","reducer","state","update","currentSuites","fuzzy","toLowerCase","entries","concat","menuActive","suiteOptionsActive","testOptionsActive","propertiesOptionsActive","activeFiles","initialState","App","useReducer","currentPropertiesCount","propertiesTotal","testCount","testTotal","onUpdate","sockets","useEffect","io","on","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c0b3c20.chunk.js","sourcesContent":["const xml2js = require('xml2js')\n\nconst parseString = (xml) => new Promise((resolve, reject) => {\n  xml2js.parseString(xml, (err, result) => {\n    if (err) reject(new Error(err))\n    else resolve(result)\n  })\n})\n\nconst hashCode = (str) => {\n  var hash = 0\n  if (str.length === 0) return hash\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + char\n    hash = hash & hash\n  }\n  return hash\n}\n\nconst extarctSuiteMeta = (output, testsuite) => {\n  const meta = testsuite.$ || {}\n  const name = meta.name || 'No Name'\n  const id = hashCode(name)\n  const suite = output.suites[id] || {}\n  suite.tests = suite.tests || {}\n  suite.properties = suite.properties || {\n    _visible: true\n  }\n  suite.id = id\n  suite.name = name\n  suite.time = meta.time || 0\n  return suite\n}\n\nconst extractProperties = (suite, testsuite) => {\n  suite.properties = suite.properties || {}\n  testsuite.properties.forEach(property => {\n    if (typeof property === 'string') {\n      property = property.trim()\n      if (property !== '') {\n        suite.properties['No Name'] = suite.properties['No Name'] || []\n        suite.properties['No Name'].push(property)\n      }\n    } else {\n      property.property.forEach(property => {\n        const meta = property.$ || {}\n        const name = meta.name || 'No Name'\n        let value = meta.value || property._\n        if (typeof property === 'string') value = property\n        value = value || ''\n        value = value.trim()\n        suite.properties[name] = suite.properties[name] || []\n        if (value) {\n          suite.properties[name].push(value)\n        }\n      })\n    }\n  })\n}\n\nconst extractTestMessages = (test, messages) => {\n  messages.forEach(body => {\n    const is_ = typeof body._ === 'string'\n    const is$Message = typeof body.$ !== 'undefined' && ('message' in body.$)\n    const is$Type = typeof body.$ !== 'undefined' && ('type' in body.$)\n    const isString = typeof body === 'string'\n\n    if (is_) test.messages.push(body._.trim())\n    if (is$Message) test.messages.push(body.$.message.trim())\n    if (is$Type) test.messages.push(body.$.type.trim())\n    if (isString) test.messages.push(body.trim())\n  })\n}\n\nconst extractTests = (output, suite, testcases) => {\n  suite.tests = suite.tests || {}\n  testcases.forEach(testcase => {\n    const meta = testcase.$ || {}\n    const name = meta.name || 'No Name'\n    const time = meta.time || 0\n    const id = hashCode(name)\n\n    const test = suite.tests[id] || { id, name, messages: [], visible: true }\n    test.time = time\n    if (typeof testcase === 'string') test.messages.push(testcase.trim())\n    if (testcase._) test.messages.push(testcase._.trim())\n    if (meta.message) test.messages.push(testcase.$.message.trim())\n\n    if (typeof testcase !== 'string') {\n      const keys = Object.keys(testcase).filter(key => key !== '$' && key !== '_' && key !== 'testcase')\n      let status = keys[0]\n      if (status) extractTestMessages(test, testcase[status])\n      if (status === 'system-out') status = 'passed'\n      console.log(status)\n      test.status = status || 'passed'\n    }\n\n    test.messages = test.messages.filter(message => message !== '')\n\n    suite.tests[id] = test\n    if (typeof testcase.testcase !== 'undefined') extractTests(output, suite, testcase.testcase)\n    if (typeof testcase.testsuite !== 'undefined') extractSuite(output, testcase.testsuite)\n  })\n}\n\nconst extractSuite = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    const suite = extarctSuiteMeta(output, testsuite)\n    if (typeof testsuite.properties !== 'undefined') extractProperties(suite, testsuite)\n    if (typeof testsuite.testcase !== 'undefined') extractTests(output, suite, testsuite.testcase)\n    output.suites[suite.id] = suite\n  })\n}\n\nconst extract = (output, testsuites) => {\n  if (!Array.isArray(testsuites)) testsuites = [testsuites]\n  testsuites.forEach(testsuite => {\n    extractSuite(output, testsuite)\n    if (typeof testsuite.testsuite !== 'undefined') extract(output, testsuite.testsuite)\n  })\n}\n\nconst parse = async (xml) => {\n  const output = {\n    suites: {}\n  }\n  const result = await parseString(xml)\n  if (result.testsuites) {\n    const testsuites = result.testsuites.testsuite\n    extract(output, testsuites)\n  } else if (result.testsuite) {\n    extract(output, result.testsuite)\n  }\n\n  return output\n}\n\nif (typeof window !== 'undefined') window.parse = parse\nelse {\n  module.exports = parse\n}\n","import React from 'react'\n\nexport default () => <svg className='logo' width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'>\n  <rect width='64' height='64' fill='#2C3E50' />\n  <path d='M19.0625 28.9688L24.5156 20.25H28.0469L20.8594 31.5312L28.2188 43H24.6562L19.0625 34.125L13.4375 43H9.89062L17.2656 31.5312L10.0625 20.25H13.5781L19.0625 28.9688Z' fill='#0DBF1F' />\n  <path d='M42.4344 39.0156L48.9344 20.25H52.2156L43.7781 43H41.1219L32.7 20.25H35.9656L42.4344 39.0156Z' fill='#B32010' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64L4 60V4H60L64 0H4H0V4V64Z' fill='#0DBF1F' />\n  <path fillRule='evenodd' clipRule='evenodd' d='M0 64H60H64V60V0L60 4V60H4L0 64Z' fill='#B32010' />\n</svg>\n","import React from 'react'\nimport Logo from './logo'\nimport { Slider } from 'react-burgers'\n\nexport default ({ active, onClick }) => <section className='hero is-black'>\n  <div className='container'>\n    <div className='columns is-mobile'>\n      <div className='column is-1'>\n        <Slider className='button' active={active} onClick={onClick} borderRadius={4} color='#fff' />\n      </div>\n      <div className='column is-11'>\n        <div className='hero-center'>\n          <Logo />\n          <h1 className='title'>Xunit Viewer</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import React from 'react'\n\nexport default ({\n  active,\n  onIcon,\n  offIcon,\n  onLabel,\n  offLabel,\n  disabled = false,\n  onChange = () => {},\n  className = ''\n}) => {\n  return <button\n    onClick={() => {\n      onChange(!active)\n    }}\n    disabled={disabled}\n    className={`button toggle is-${active ? 'active' : 'inactive'} ${className}`}>\n    <div className='toggle-rail'>\n      <div className='toggle-handle' />\n    </div>\n    {active ? onIcon : offIcon}\n    <span>{active ? onLabel : offLabel}</span>\n  </button>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-suites',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ suitesExpanded = true, count = 0, total = 0, dispatch, active = false }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Suites' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-suite-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <Toggle\n          onChange={() => dispatch({ type: 'toggle-all-suites' })}\n          active={suitesExpanded}\n          onLabel='Expanded'\n          offLabel='Contracted'\n          offIcon={<ChevronUpIcon />}\n          onIcon={<ChevronDownIcon />} />\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Search = ({ label, dispatch, suite, id }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-tests',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total, icon }) => <div className='options-total'>\n  {icon\n    ? <span className='icon'>\n      <i className={`fas fa-${icons[icon] || icons.unknown}`} aria-hidden='true' />\n    </span>\n    : null}\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst fromTestCounts = (testCounts, status, value) => {\n  const statusCounts = testCounts[status] || {}\n  return statusCounts[value] || 0\n}\n\nconst EyeIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye' />\n  </span>\n</>\n\nconst EyeSlashIcon = () => <>\n  <span className='icon'>\n    <i className='fas fa-eye-slash' />\n  </span>\n</>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nconst StatusTotal = ({ testCounts, status }) => {\n  return fromTestCounts(testCounts, status, 'total') > 0 ? <Total count={fromTestCounts(testCounts, status, 'count')} total={fromTestCounts(testCounts, status, 'total')} icon={status} /> : null\n}\n\nconst ToggleRow = ({ status, label, dispatch, visible = true, expanded = true, raw = true }) => <div className='test-options-toggle-row'>\n  <div className='test-options-toggle-row-label'>\n    {status !== 'all'\n      ? <span className='icon'>\n        <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n      </span>\n      : <span className='icon'>\n        <i className='far fa-circle' aria-hidden='true' />\n      </span>}\n    <span>{label}</span>\n  </div>\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-visibility',\n        payload: {\n          status,\n          active: !visible\n        }\n      })\n    }}\n    active={visible}\n    onLabel='Visible'\n    offLabel='Hidden'\n    onIcon={<EyeIcon />}\n    offIcon={<EyeSlashIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-expanded',\n        payload: {\n          status,\n          active: !expanded\n        }\n      })\n    }}\n    active={expanded}\n    onLabel='Expanded'\n    offLabel='Contracted'\n    onIcon={<ChevronDownIcon />}\n    offIcon={<ChevronUpIcon />} />\n  <Toggle\n    onChange={() => {\n      dispatch({\n        type: 'toggle-test-raw',\n        payload: {\n          status,\n          active: !raw\n        }\n      })\n    }}\n    active={raw}\n    onLabel='Raw'\n    offLabel='Pretty'\n    onIcon={<CodeIcon />}\n    offIcon={<PrettyIcon />} />\n\n</div>\n\nconst Options = ({\n  testCounts = {},\n  testToggles = {},\n  count = 0,\n  total = 0,\n  dispatch,\n  active = false\n}) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Tests' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-test-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n          <StatusTotal testCounts={testCounts} status='passed' />\n          <StatusTotal testCounts={testCounts} status='failure' />\n          <StatusTotal testCounts={testCounts} status='error' />\n          <StatusTotal testCounts={testCounts} status='skipped' />\n          <StatusTotal testCounts={testCounts} status='unknown' />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content options-toggles'>\n      {active\n        ? <>\n          <ToggleRow status='all' label='All' dispatch={dispatch} {...testToggles.all} />\n          <ToggleRow status='passed' label='Passed' dispatch={dispatch} {...testToggles.passed} />\n          <ToggleRow status='failure' label='Failure' dispatch={dispatch} {...testToggles.failure} />\n          <ToggleRow status='error' label='Error' dispatch={dispatch} {...testToggles.error} />\n          <ToggleRow status='skipped' label='Skipped' dispatch={dispatch} {...testToggles.skipped} />\n          <ToggleRow status='unknown' label='Unknown' dispatch={dispatch} {...testToggles.unknown} />\n        </>\n        : null}\n    </div>\n\n  </div>\n}\n\nexport default Options\n","import React from 'react'\nimport Toggle from './toggle'\n\nconst Search = ({ label, dispatch }) => <div className='field options-search'>\n  <div className='control'>\n    <input\n      onChange={(evt) => {\n        dispatch({\n          type: 'search-properties',\n          payload: {\n            value: evt.target.value\n          }\n        })\n      }}\n      className='input'\n      type='text'\n      placeholder={label} />\n  </div>\n</div>\n\nconst Total = ({ count, total }) => <div className='options-total'>\n  <b>{count}</b><span>/{total}</span>\n</div>\n\nconst EyeIcon = () => <span className='icon'>\n  <i className='fas fa-eye' />\n</span>\n\nconst EyeSlashIcon = () => <span className='icon'>\n  <i className='fas fa-eye-slash' />\n</span>\n\nconst ChevronUpIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-up' />\n</span>\n\nconst ChevronDownIcon = () => <span className='icon'>\n  <i className='fas fa-chevron-down' />\n</span>\n\nexport default ({ count = 0, total = 0, active = false, dispatch, propertiesExpanded = true, propertiesVisible = true }) => {\n  return <div className={`options card ${active ? 'is-active' : 'is-inactive'}`}>\n    <header className='card-header'>\n      <Search label='Properties' dispatch={dispatch} />\n      <button\n        onClick={() => dispatch({ type: 'toggle-properties-options' })}\n        className='button card-header-icon'>\n        <div className='options-inputs'>\n          <Total count={count} total={total} />\n        </div>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </button>\n    </header>\n    <div className='card-content'>\n      {active\n        ? <div>\n          <Toggle\n            className='properties-options-toggle'\n            active={propertiesVisible}\n            onChange={() => {\n              dispatch({\n                type: 'toggle-properties-visbility',\n                payload: {\n                  active: !propertiesVisible\n                }\n              })\n            }}\n            onLabel='Visible'\n            offLabel='Hidden'\n            onIcon={<EyeIcon />}\n            offIcon={<EyeSlashIcon />} />\n          <Toggle\n            onChange={() => {\n              dispatch({\n                type: 'toggle-all-properties',\n                payload: {\n                  active: !propertiesExpanded\n                }\n              })\n            }}\n            className='properties-options-toggle'\n            active={propertiesExpanded}\n            onLabel='Expanded'\n            offLabel='Contracted'\n            offIcon={<ChevronUpIcon />}\n            onIcon={<ChevronDownIcon />} />\n        </div>\n        : null}\n    </div>\n\n  </div>\n}\n","import React from 'react'\nimport { title } from 'change-case'\nimport Toggle from './toggle'\n\nconst icons = {\n  passed: 'check',\n  failure: 'times',\n  error: 'exclamation',\n  skipped: 'ban',\n  unknown: 'question'\n}\n\nconst Properties = ({ properties, active = true, dispatch, suite }) => {\n  return <div className={`properties card is-${active ? 'active' : 'inactive'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-properties', payload: { suite, active: !active } }) }}>\n      <p className='card-header-title'>Properties</p>\n      <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span>\n    </button>\n    {active ? <div className='card-content'>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Property</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(properties)\n            .filter(key => key !== '_active' && key !== '_visible')\n            .map(key => {\n              return <tr key={key}>\n                <td>{key}</td>\n                <td>{properties[key]}</td>\n              </tr>\n            })}\n        </tbody>\n      </table>\n    </div> : null}\n  </div>\n}\n\nconst RawContent = ({ messages }) => <div className='raw-content'>\n  {messages.map((message, index) => <pre key={`test-message-${index}`}>{message}</pre>)}\n</div>\n\nconst PrettyContent = ({ messages }) => <div className='pretty-content'>\n  {messages.map((message, index) => <div key={`test-message-${index}`} dangerouslySetInnerHTML={{ __html: message }} />)}\n</div>\n\nconst PrettyIcon = () => <span className='icon'>\n  <i className='fas fa-star' />\n</span>\n\nconst CodeIcon = () => <span className='icon'>\n  <i className='fas fa-code' />\n</span>\n\nconst Test = ({ id, messages, status, time, name, active = true, raw = true, dispatch, suite }) => {\n  return <div className={`test card is-${active ? 'active' : 'inactive'} is-${status} is-${messages.length === 0 ? 'empty' : 'populated'}`}>\n    <button className='card-header' onClick={() => { dispatch({ type: 'toggle-test', payload: { suite, id, active: !active } }) }} disabled={messages.length === 0}>\n      <p className='card-header-title'>\n        <span className='icon'>\n          <i className={`fas fa-${icons[status] || icons.unknown}`} aria-hidden='true' />\n        </span>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n      {messages.length > 0 ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n    </button>\n    {active && messages.length > 0 ? <div className='card-content'>\n      <Toggle\n        active={raw}\n        onLabel='raw'\n        onIcon={<CodeIcon />}\n        offIcon={<PrettyIcon />}\n        offLabel='pretty'\n        onChange={() => dispatch({ type: 'toggle-test-mode', payload: { suite, id, raw: !raw } })} />\n      {raw ? <RawContent messages={messages} /> : <PrettyContent messages={messages} />}\n    </div> : null}\n  </div>\n}\n\nconst SuiteCount = ({ count, type }) => count > 0 ? <span className='suite-count'>\n  <span className='icon'>\n    <i className={`fas fa-${icons[type]}`} aria-hidden='true' />\n  </span>\n  {count}\n</span> : null\n\nconst Suite = ({ id, name, active = false, properties = {}, time, tests = {}, dispatch }) => {\n  let passed = 0\n  let failure = 0\n  let skipped = 0\n  let error = 0\n  let unknown = 0\n  Object.keys(tests).forEach(key => {\n    const status = tests[key].status\n    if (status === 'passed') passed += 1\n    else if (status === 'failure') failure += 1\n    else if (status === 'skipped') skipped += 1\n    else if (status === 'error') error += 1\n    else unknown += 1\n  })\n\n  const hasTests = Object.keys(tests).length > 0 && Object.values(tests).some(test => test.visible)\n  const hasProperties = '_visible' in properties && properties._visible && Object.keys(properties).filter(key => key !== '_active' && key !== '_visible').length > 0\n  const containsSomething = hasTests || hasProperties\n  return <div className={`card suite is-${active ? 'active' : 'inactive'} is-${containsSomething ? 'populated' : 'empty'}`}>\n    <button className='card-header' onClick={() => { if (containsSomething) dispatch({ type: 'toggle-suite', payload: { id, active: !active } }) }} disabled={!containsSomething}>\n      <p className='card-header-title'>\n        <span>{title(name)}</span>\n        {time ? <small>time = {time}</small> : null}\n      </p>\n\n      {containsSomething ? <span className='card-header-icon'>\n        <span className='icon'>\n          <i className='fas fa-angle-down' />\n        </span>\n      </span> : null}\n      {containsSomething ? <p className='suite-count-container'>\n        <SuiteCount type='failure' count={failure} />\n        <SuiteCount type='error' count={error} />\n        <SuiteCount type='passed' count={passed} />\n        <SuiteCount type='skipped' count={skipped} />\n        <SuiteCount type='unknown' count={unknown} />\n      </p> : null}\n    </button>\n    {active && containsSomething ? <div className='card-content'>\n      <div className='content'>\n        {hasProperties ? <Properties properties={properties} suite={id} dispatch={dispatch} active={properties._active} /> : null}\n        <div>\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'failure')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'error')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'passed')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && tests[key].status === 'skipped')\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n          {Object.keys(tests)\n            .filter((key) => tests[key].visible && !['failure', 'error', 'passed', 'skipped'].includes(tests[key].status))\n            .map(key => <Test key={key} {...tests[key]} suite={id} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </div> : null}\n  </div>\n}\n\nexport default Suite\n","require('../cli/parse')\nconst parse = window.parse\nexport default parse\n","import React, { useReducer, useEffect } from 'react'\nimport merge from 'merge'\nimport fuzzy from 'fuzzy'\n\nimport Hero from './hero'\nimport SuiteOptions from './suite-options'\nimport TestOptions from './test-options'\nimport PropertiesOptions from './properties-options'\nimport Files from './files'\nimport Suite from './suite'\nimport parse from './parse'\n\nconst parseAll = async (dispatch, files, suites) => {\n  for (const { file, contents } of files) {\n    try {\n      const parsed = await parse(contents)\n      suites = merge.recursive(true, suites, parsed)\n    } catch (err) {\n      console.log('Failed to parse', file, '\\n', err.message)\n    }\n  }\n  dispatch({\n    type: 'parse-suites',\n    payload: {\n      suites: suites.suites\n    }\n  })\n}\n\nconst reducer = (state, { type, payload }) => {\n  console.log(type, payload)\n\n  const update = {}\n  update.currentSuites = state.currentSuites\n\n  if (type === 'parse-suites') {\n    state = merge.recursive(true, {}, state)\n    state.suites = payload.suites\n    state.currentSuites = payload.suites\n    Object.values(state.currentSuites).forEach(suite => {\n      if (Object.keys(suite.tests).length > 0 || Object.keys(suite.properties).length > 0) suite.active = true\n    })\n    return state\n  }\n\n  if (type === 'search-suites') {\n    Object.values(state.suites).forEach(({ name, id }) => {\n      if (fuzzy.test(payload.value.toLowerCase(), name.toLowerCase())) {\n        update.currentSuites[id] = update.currentSuites[id] || merge.recursive(true, {}, state.suites[id])\n        if (!('active' in update.currentSuites[id])) update.currentSuites[id].active = true\n      } else delete update.currentSuites[id]\n    })\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'search-tests') {\n    Object.values(state.suites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (!fuzzy.test(payload.value.toLowerCase(), test.name.toLowerCase()) && !test.messages.some(message => fuzzy.test(payload.value.toLowerCase(), message.toLowerCase()))) {\n          if (update.currentSuites[suite.id]) delete update.currentSuites[suite.id].tests[test.id]\n        } else if (suite.id in update.currentSuites && !(test.id in update.currentSuites[suite.id].tests)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].tests[test.id] = merge.recursive(true, {}, state.suites[suite.id].tests[test.id])\n            update.currentSuites[suite.id].tests[test.id].active = true\n            update.currentSuites[suite.id].tests[test.id].visible = true\n            update.currentSuites[suite.id].tests[test.id].raw = true\n          }\n        }\n      })\n    })\n  }\n  if (type === 'search-properties') {\n    Object.values(state.suites).forEach(suite => {\n      Object.entries(suite.properties).forEach(([key, values]) => {\n        values = values || []\n        if (values === true) values = []\n        if (!fuzzy.test(payload.value.toLowerCase(), key.toLowerCase()) && !values.some(value => fuzzy.test(payload.value.toLowerCase(), value.toLowerCase()))) delete update.currentSuites[suite.id].properties[key]\n        else if (suite.id in update.currentSuites && !(key in update.currentSuites[suite.id].properties)) {\n          if (update.currentSuites[suite.id]) {\n            update.currentSuites[suite.id].properties[key] = [].concat(state.suites[suite.id].properties[key])\n            update.currentSuites[suite.id].properties._active = true\n            update.currentSuites[suite.id].properties._visible = true\n            update.propertiesExpanded = false\n          }\n        }\n      })\n    })\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n    update.propertiesVisible = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._visible || false\n    })\n  }\n\n  if (type === 'toggle-all-suites') {\n    update.suitesExpanded = !state.suitesExpanded\n    Object.values(update.currentSuites).forEach(suite => { suite.active = update.suitesExpanded })\n  }\n  if (type === 'toggle-menu') update.menuActive = !state.menuActive\n  if (type === 'toggle-suite-options') update.suiteOptionsActive = !state.suiteOptionsActive\n  if (type === 'toggle-test-options') update.testOptionsActive = !state.testOptionsActive\n  if (type === 'toggle-properties-options') update.propertiesOptionsActive = !state.propertiesOptionsActive\n  if (type === 'toggle-files') update.activeFiles = !state.activeFiles\n  if (type === 'toggle-suite') {\n    update.currentSuites[payload.id].active = payload.active\n    update.suitesExpanded = Object.values(update.currentSuites).some(suite => suite.active === true)\n  }\n  if (type === 'toggle-all-properties') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._active = payload.active\n    })\n    update.propertiesExpanded = payload.active\n  }\n  if (type === 'toggle-properties') {\n    update.currentSuites[payload.suite].properties._active = payload.active\n    update.propertiesExpanded = Object.values(update.currentSuites).some((suite) => {\n      return suite.properties._active || false\n    })\n  }\n\n  if (type === 'toggle-properties-visbility') {\n    Object.values(update.currentSuites).forEach(suite => {\n      suite.properties._visible = payload.active\n    })\n    update.propertiesVisible = payload.active\n  }\n\n  if (type === 'toggle-test') {\n    update.currentSuites[payload.suite].tests[payload.id].active = payload.active\n  }\n  if (type === 'toggle-test-mode') {\n    update.currentSuites[payload.suite].tests[payload.id].raw = payload.raw\n  }\n  if (type === 'toggle-test-visibility') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].visible = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.visible = payload.active\n        else if (payload.status === test.status) test.visible = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.visible = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.visible = payload.active\n      update.testToggles.failure.visible = payload.active\n      update.testToggles.error.visible = payload.active\n      update.testToggles.skipped.visible = payload.active\n      update.testToggles.unknown.visible = payload.active\n    } else {\n      if (update.testToggles.passed.visible ||\n          update.testToggles.failure.visible ||\n          update.testToggles.error.visible ||\n          update.testToggles.skipped.visible ||\n          update.testToggles.unknown.visible) update.testToggles.all.visible = true\n    }\n  }\n  if (type === 'toggle-test-expanded') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].expanded = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.active = payload.active\n        else if (payload.status === test.status) test.active = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.active = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.expanded = payload.active\n      update.testToggles.failure.expanded = payload.active\n      update.testToggles.error.expanded = payload.active\n      update.testToggles.skipped.expanded = payload.active\n      update.testToggles.unknown.expanded = payload.active\n    } else {\n      if (update.testToggles.passed.expanded ||\n          update.testToggles.failure.expanded ||\n          update.testToggles.error.expanded ||\n          update.testToggles.skipped.expanded ||\n          update.testToggles.unknown.expanded) update.testToggles.all.expanded = true\n    }\n  }\n  if (type === 'toggle-test-raw') {\n    update.testToggles = state.testToggles\n    update.testToggles[payload.status].raw = payload.active\n\n    Object.values(update.currentSuites).forEach(suite => {\n      Object.values(suite.tests).forEach(test => {\n        if (payload.status === 'all') test.raw = payload.active\n        else if (payload.status === test.status) test.raw = payload.active\n        else if (typeof test.status === 'undefined' && payload.status === 'unknown') test.raw = payload.active\n      })\n    })\n\n    if (payload.status === 'all') {\n      update.testToggles.passed.raw = payload.active\n      update.testToggles.failure.raw = payload.active\n      update.testToggles.error.raw = payload.active\n      update.testToggles.skipped.raw = payload.active\n      update.testToggles.unknown.raw = payload.active\n    } else {\n      if (update.testToggles.passed.raw ||\n          update.testToggles.failure.raw ||\n          update.testToggles.error.raw ||\n          update.testToggles.skipped.raw ||\n          update.testToggles.unknown.raw) update.testToggles.all.raw = true\n    }\n  }\n\n  return merge.recursive(true, state, update)\n}\n\nconst initialState = {\n  suites: {},\n  currentSuites: {},\n  menuActive: false,\n  suiteOptionsActive: false,\n  testOptionsActive: false,\n  propertiesOptionsActive: false,\n  activeFiles: false,\n  suitesExpanded: true,\n  propertiesExpanded: true,\n  propertiesVisible: true,\n  testToggles: {\n    all: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    passed: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    failure: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    error: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    skipped: {\n      visible: true,\n      expanded: true,\n      raw: true\n    },\n    unknown: {\n      visible: true,\n      expanded: true,\n      raw: true\n    }\n  }\n}\n\nconst App = ({ files }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  if (Object.keys(state.suites).length === 0) parseAll(dispatch, files, {})\n\n  let currentPropertiesCount = 0\n  let propertiesTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    currentPropertiesCount += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    propertiesTotal += Object.keys(suite.properties).filter(key => key !== '_active' && key !== '_visible').length\n  })\n\n  const testCounts = {}\n  let testCount = 0\n  let testTotal = 0\n  Object.entries(state.currentSuites).forEach(([key, suite]) => {\n    Object.entries(suite.tests).forEach(([key, test]) => {\n      const status = test.status || 'unknown'\n      testCounts[status] = testCounts[status] || {}\n      testCounts[status].count = testCounts[status].count || 0\n      testCounts[status].total = testCounts[status].total || 0\n\n      testCounts[status].count += 1\n      testCounts[status].total += 1\n\n      testTotal += 1\n      testCount += 1\n    })\n  })\n\n  const onUpdate = ({ files }) => {\n    parseAll(dispatch, files, {})\n  }\n\n  window.sockets = window.sockets || null\n  useEffect(() => {\n    if (window.sockets === null && 'io' in window) {\n      window.sockets = window.io()\n      window.sockets.on('update', onUpdate)\n    }\n  })\n\n  return <div>\n    <Hero active={state.menuActive} onClick={() => { dispatch({ type: 'toggle-menu' }) }} />\n    <header className={`is-${!state.menuActive ? 'hidden' : 'shown'}`}>\n      <div className='container'>\n        <SuiteOptions\n          active={state.suiteOptionsActive}\n          suitesExpanded={state.suitesExpanded}\n          dispatch={dispatch}\n          count={Object.keys(state.currentSuites).length}\n          total={Object.keys(state.suites).length}\n        />\n        <TestOptions\n          active={state.testOptionsActive}\n          testToggles={state.testToggles}\n          testCounts={testCounts}\n          count={testCount}\n          total={testTotal}\n          dispatch={dispatch}\n        />\n        <PropertiesOptions\n          propertiesExpanded={state.propertiesExpanded}\n          propertiesVisible={state.propertiesVisible}\n          active={state.propertiesOptionsActive}\n          count={currentPropertiesCount}\n          total={propertiesTotal}\n          dispatch={dispatch}\n        />\n        {process.env.NODE_ENV === 'development'\n          ? <Files files={files} active={state.activeFiles} setActive={() => { dispatch({ type: 'toggle-files' }) }} />\n          : null}\n      </div>\n    </header>\n    <main>\n      <div className='container'>\n        <div>\n          {Object.values(state.currentSuites).map(suite => <Suite key={suite.id} {...suite} dispatch={dispatch} />)}\n        </div>\n      </div>\n    </main>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nimport './app/index.css'\nimport App from './app/app.js'\n\nlet files = window.files || []\n\nif (process.env.NODE_ENV === 'development') {\n  files = [{\n    file: '/path/to/file/complete.xml',\n    contents: `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <testsuite tests=\"939\" failures=\"4\" name=\"CucumberTest\" time=\"0.069\" errors=\"0\" skipped=\"0\">\n        <testcase classname=\"Scenario: Uploading a file should work.\" name=\"Then the file is uploaded successfully\" time=\"0.004\">\n            <failure type=\"java.lang.AssertionError\">java.lang.AssertionError\n        at org.junit.Assert.fail(Assert.java:86)\n        at org.junit.Assert.assertTrue(Assert.java:41)\n        at org.junit.Assert.assertTrue(Assert.java:52)\n        at com.germaniumhq.germanium.steps.GermaniumFunctionSelectFile.the_file_is_uploaded_successfully(GermaniumFunctionSelectFile.java:26)\n        at ✽.Then the file is uploaded successfully(features/features/germanium-function-select_file.feature:7)\n            </failure>\n        </testcase>\n    </testsuite>`\n  }]\n}\n\nReactDOM.render(<App files={files} />, document.getElementById('root'))\n"],"sourceRoot":""}